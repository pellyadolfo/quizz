{
			"mapping": "SECTION",
			"Mapping - MongoConverter": "The mapping between MongoDB documents and domain classes is done by delegating to an implementation of the MongoConverter interface.",
			"Mapping - MongoConverter - SimpleMongoConverter": "deprecated in Spring Data MongoDB M3 and its functionality has been moved into MappingMongoConverter",
			"Mapping - MongoConverter - MappingMongoConverter": "The default converter implementation used by MongoTemplate is MappingMongoConverter. While the MappingMongoConverter can use additional metadata to specify the mapping of objects to documents, it can also convert objects that contain no additional metadata by using some conventions for the mapping of IDs and collection names. The MappingMongoConverter checks to see if any Spring converters can handle a specific class before attempting to map the object itself. To 'hijack' the normal mapping strategies of the MappingMongoConverter, perhaps for increased performance or other custom mapping needs, you first need to create an implementation of the Spring Converter interface and then register it with the MappingConverter.",
			"Mapping - MongoConverter - MappingMongoConverter - @Id": "Aplied at the field level to mark the field used for identity purpose.",
			"Mapping - MongoConverter - MappingMongoConverter - @Document": "Applied at the class level to indicate this class is a candidate for mapping to the database. You can specify the name of the collection where the database will be stored.",
			"Mapping - MongoConverter - MappingMongoConverter - @DBRef": "Applied at the field to indicate it is to be stored using a com.mongodb.DBRef.",
			"Mapping - MongoConverter - MappingMongoConverter - @Indexed": "Applied at the field level to describe how to index the field.",
			"Mapping - MongoConverter - MappingMongoConverter - @CompoundIndex": "Applied at the type level to declare Compound Indexes.",
			"Mapping - MongoConverter - MappingMongoConverter - @GeoSpatialIndexed": "Applied at the field level to describe how to geoindex the field.",
			"Mapping - MongoConverter - MappingMongoConverter - @TextIndexed": "Applied at the field level to mark the field to be included in the text index.",
			"Mapping - MongoConverter - MappingMongoConverter - @Language": "Applied at the field level to set the language override property for text index.",
			"Mapping - MongoConverter - MappingMongoConverter - @Transient": "By default all private fields are mapped to the document, this annotation excludes the field where it is applied from being stored in the database",
			"Mapping - MongoConverter - MappingMongoConverter - @PersistenceConstructor": "Marks a given constructor - even a package protected one - to use when instantiating the object from the database. Constructor arguments are mapped by name to the key values in the retrieved Document.",
			"Mapping - MongoConverter - MappingMongoConverter - @Value": "This annotation is part of the Spring Framework . Within the mapping framework it can be applied to constructor arguments. This lets you use a Spring Expression Language statement to transform a key’s value retrieved in the database before it is used to construct a domain object. In order to reference a property of a given document one has to use expressions like: @Value('#root.myProperty') where root refers to the root of the given document.",
			"Mapping - MongoConverter - MappingMongoConverter - @Field": "Applied at the field level and described the name of the field as it will be represented in the MongoDB BSON document thus allowing the name to be different than the fieldname of the class.",
			"Mapping - MongoConverter - MappingMongoConverter - @Version": "Applied at field level is used for optimistic locking and checked for modification on save operations. The initial value is zero which is bumped automatically on every update.",
			"Mapping - MongoConverter - custom": "You can use the customConversions method in AbstractMongoConfiguration to configure converters.",
			"Mapping - MongoConverter - MappingMongoConverter - MongoTypeMapper": "To achieve that, the MappingMongoConverter uses a MongoTypeMapper.",
			"Mapping - MongoConverter - MappingMongoConverter - DefaultMongoTypeMapper": "DefaultMongoTypeMapper as its main implementation. Its default behavior to store the fully qualified classname under _class inside the document. Type hints are written for top-level documents as well as for every value (if it is a complex type and a subtype of the declared property type).",
			"Mapping - MongoConverter - MappingMongoConverter - customize": "",
			"Mapping - MongoConverter - MappingMongoConverter - customize - @TypeAlias": "If you want to avoid writing the entire Java class name as type information but would rather like to use a key, you can use the @TypeAlias annotation on the entity class.",
			"Mapping - MongoConverter - MappingMongoConverter - customize - TypeInformationMapper": "If you need to customize the mapping even more, have a look at the TypeInformationMapper interface.",

			"listener": "SECTION",
			"Listener": "Spring Data MongoDB publishes some very useful life cycle events – such as onBeforeConvert, onBeforeSave, onAfterSave, onAfterLoad and onAfterConvert.",
			"Listener - AbstractMappingEventListener": "To intercept one of the events, we need to register a subclass of AbstractMappingEventListener and override one of the methods here. When the event is dispatched, our listener will be called and domain object passed in.",
			"Listener - AbstractMappingEventListener - onAfterConvert(com.mongodb.DBObject dbo, E source)": "",
			"Listener - AbstractMappingEventListener - onAfterLoad(com.mongodb.DBObject dbo)": "",
			"Listener - AbstractMappingEventListener - onAfterSave(E source, com.mongodb.DBObject dbo)": "",
			"Listener - AbstractMappingEventListener - onApplicationEvent(T appEvent)": "",
			"Listener - AbstractMappingEventListener - onBeforeConvert(E source)": "",
			"Listener - AbstractMappingEventListener - onBeforeSave(E source, com.mongodb.DBObject dbo)": "",

			"Sync": "SECTION",
			"Sync - Config": "To configure Spring Data MongoDB we can (1) create the @Bean(s) ourselves on a @Configuration class (2) declare them in XML  or (3) use a AbstractMongoConfiguration and override abstract methods",
			"Sync - Config - @Bean": "Declare @Beans in a @Configuration class",
			"Sync - Config - @Bean - MongoFactoryBean": "Deprecated Spring-Data-MongoDB 1.7. Declare a org.springframework.data.mongodb.core.MongoFactoryBean @Bean in a @Configuration class: public @Bean MongoFactoryBean mongo()  MongoFactoryBean mongo = new MongoFactoryBean(), mongo.setHost('localhost'), return mongo, }",
			"Sync - Config - @Bean - MongoClientFactoryBean": "Declare a org.springframework.data.mongodb.core.MongoClientFactoryBean @Bean in a @Configuration class: @Bean public MongoClientFactoryBean mongoClientFactoryBean() { MongoClientFactoryBean factoryBean = new MongoClientFactoryBean(), factoryBean.setHost('localhost'), return factoryBean, }",
			"Sync - Config - @Bean - Mongo": "Declare a com.mongodb.Mongo @Bean in a @Configuration class: public @Bean Mongo mongo() throws UnknownHostException { return new Mongo('localhost'), }",
			"Sync - Config - @Bean - MongoClient": "Declare @Bean MongoClient",
			"Sync - Config - @Bean - MongoTemplate": "Declare @Bean MongoTemplate public @Bean MongoTemplate mongoTemplate() { return new MongoTemplate(mongoClient(), 'mydatabase'), }",
			"Sync - Config - @Bean - MongoDbFactory": "Declare @Bean MongoDbFactory",
			"Sync - Config - @Bean - MongoDbFactory - MongoDatabase": "MongoDatabase object and access all the functionality of a specific MongoDB database instance.",
			"Sync - Config - @Bean - MongoDbFactory - MongoDatabase - MongoDatabase getDb() throws DataAccessException": "",
			"Sync - Config - @Bean - MongoDbFactory - MongoDatabase - MongoDatabase getDb(String dbName) throws DataAccessException": "",
			"Sync - Config - XML - <mongo:mongo-client/> ": "<mongo:mongo-client host='localhost' port='27017'> <mongo:client-options ...> </mongo:mongo-client>",
			"Sync - Config - XML - <mongo:db-factory/>": "<mongo:db-factory dbname='database' mongo-ref='mongoClient'/>",
			"Sync - MongoRepository": "extends PagingAndSortingRepository (see Sprind Data commons)",
			"Sync - MongoRepository - config - @EnableMongoRepositories": "@EnableMongoRepositories(basePackages = 'org.baeldung.repository') Repositories are not picked up by component scans since they are just interfaces whos concrete classes are created dynamically as beans by Spring Data provided you have included the @EnableJpaRepositories annotation in your configuration:",
			"Sync - MongoRepository - config - XML": "<mongo:repositories base-package='org.baeldung.repository' mongo-template-ref='mongoTemplate'/>",
			"Sync - MongoRepository - methods - findAll()": "",
			"Sync - MongoRepository - methods - findAll(Example<S> example)": "",
			"Sync - MongoRepository - methods - findAll(Example<S> example, Sort sort)": "",
			"Sync - MongoRepository - methods - findAll(Sort sort) ": "",
			"Sync - MongoRepository - methods - insert(Iterable<S> entities)": "",
			"Sync - MongoRepository - methods - insert(S entity)": "",
			"Sync - MongoRepository - methods - saveAll(Iterable<S> entities) ": "",
			"Sync - MongoOperations - Config - XML - <bean id='mongoTemplate'/>": "<bean id='mongoTemplate' class='org.springframework.data.mongodb.core.MongoTemplate'><constructor-arg ref='mongoClient'/><constructor-arg name='databaseName' value='geospatial'/></bean>",
			"Sync - MongoOperations - Config - AbstractMongoConfiguration": "Java config by extending the base class for MongoDB configuration AbstractMongoConfiguration. Provides the required beans",
			"Sync - MongoOperations - Config - AbstractMongoConfiguration - mongoClient()": "Return the MongoClient instance to connect to.",
			"Sync - MongoOperations - Config - AbstractMongoConfiguration - mongoDbFactory()": "Creates a SimpleMongoDbFactory to be used by the MongoTemplate.",
			"Sync - MongoOperations - Config - AbstractMongoConfiguration - mappingMongoConverter()": "Creates a MappingMongoConverter using the configured mongoDbFactory() and MongoConfigurationSupport.mongoMappingContext().",
			"Sync - MongoOperations - Config - AbstractMongoConfiguration - mongoTemplate()": "Creates a MongoTemplate.",			
			"Sync - MongoOperations": "The MongoOperations interface is one of the central components when it comes to more low-level interaction with MongoDB. It offers a wide range of methods covering needs from collection creation, index creation, and CRUD operations to more advanced functionality, such as Map-Reduce and aggregations. You can find multiple overloads for each method. Most of them cover optional or nullable parts of the API.",
			"Sync - MongoOperations - MongoTemplate": "The MongoTemplate follows the standard template pattern in Spring and provides a ready to go, basic API to the underlying persistence engine. The MongoTemplate class implements the interface MongoOperations. The MongoTemplate class, located in the org.springframework.data.mongodb.core package, is the central class of Spring’s MongoDB support and provides a rich feature set for interacting with the database. The template offers convenience operations to create, update, delete, and query MongoDB documents and provides a mapping between your domain objects and MongoDB documents.",
			"Sync - MongoOperations - MongoTemplate - saving": "Saves the object, overwriting any object that might have the same id",
			"Sync - MongoOperations - MongoTemplate - saving - save(T objectToSave)": "Save the object to the collection for the entity type of the object to save.",
			"Sync - MongoOperations - MongoTemplate - saving - save(T objectToSave, String collectionName)": "Save the object to the specified collection.",
			"Sync - MongoOperations - MongoTemplate - inserting": "Inserts an object. If there is an existing document with the same id, an error is generated.",
			"Sync - MongoOperations - MongoTemplate - inserting - void insert (Object objectToSave)": "Insert the object to the default collection.",
			"Sync - MongoOperations - MongoTemplate - inserting - void insert (Object objectToSave, String collectionName)": "Insert the object to the specified collection.",
			"Sync - MongoOperations - MongoTemplate - updating": "",
			"Sync - MongoOperations - MongoTemplate - updating - updateFirst": "Updates the first document that matches the query document criteria with the updated document.",
			"Sync - MongoOperations - MongoTemplate - updating - updateMulti": "Updates all objects that match the query document criteria with the updated document.",
			"Sync - MongoOperations - MongoTemplate - updating - Update": "You can use a little 'syntax sugar' with the Update class, as its methods are meant to be chained together.",
			"Sync - MongoOperations - MongoTemplate - updating - Update - addToSet (String key, Object value)": "Update using the $addToSet update modifier",
			"Sync - MongoOperations - MongoTemplate - updating - Update - currentDate (String key)": "Update using the $currentDate update modifier",
			"Sync - MongoOperations - MongoTemplate - updating - Update - currentTimestamp (String key)": "Update using the $currentDate update modifier with $type timestamp",
			"Sync - MongoOperations - MongoTemplate - updating - Update - inc (String key, Number inc)": "Update using the $inc update modifier",
			"Sync - MongoOperations - MongoTemplate - updating - Update - max (String key, Object max)": "Update using the $max update modifier",
			"Sync - MongoOperations - MongoTemplate - updating - Update - min (String key, Object min)": "Update using the $min update modifier",
			"Sync - MongoOperations - MongoTemplate - updating - Update - multiply (String key, Number multiplier)": "Update using the $mul update modifier",
			"Sync - MongoOperations - MongoTemplate - updating - Update - pop (String key, Update.Position pos)": "Update using the $pop update modifier",
			"Sync - MongoOperations - MongoTemplate - updating - Update - pull (String key, Object value)": "Update using the $pull update modifier",
			"Sync - MongoOperations - MongoTemplate - updating - Update - pullAll (String key, Object[] values)": "Update using the $pullAll update modifier",
			"Sync - MongoOperations - MongoTemplate - updating - Update - push (String key, Object value)": "Update using the $push update modifier",
			"Sync - MongoOperations - MongoTemplate - updating - Update - pushAll (String key, Object[] values)": "Update using the $pushAll update modifier",
			"Sync - MongoOperations - MongoTemplate - updating - Update - rename (String oldName, String newName)": "Update using the $rename update modifier",
			"Sync - MongoOperations - MongoTemplate - updating - Update - set (String key, Object value)": "Update using the $set update modifier",
			"Sync - MongoOperations - MongoTemplate - updating - Update - setOnInsert (String key, Object value)": "Update using the $setOnInsert update modifier",
			"Sync - MongoOperations - MongoTemplate - updating - Update - unset (String key)": "Update using the $unset update modifier",
			"Sync - MongoOperations - MongoTemplate - upserting": "will perform an insert if no document is found that matches the query.",
			"Sync - MongoOperations - MongoTemplate - upserting - upsert": "",
			"Sync - MongoOperations - MongoTemplate - querying": "",
			"Sync - MongoOperations - MongoTemplate - querying - find": "",
			"Sync - MongoOperations - MongoTemplate - querying - findOne": "",
			"Sync - MongoOperations - MongoTemplate - querying - findBy - findById": "Return an object of the given ID and target class.",
			"Sync - MongoOperations - MongoTemplate - querying - findBy - derivation - After": "",
			"Sync - MongoOperations - MongoTemplate - querying - findBy - derivation - GreaterThan": "",
			"Sync - MongoOperations - MongoTemplate - querying - findBy - derivation - GreaterThanEqual": "",
			"Sync - MongoOperations - MongoTemplate - querying - findBy - derivation - Before": "",
			"Sync - MongoOperations - MongoTemplate - querying - findBy - derivation - LessThan": "",
			"Sync - MongoOperations - MongoTemplate - querying - findBy - derivation - LessThanEqual": "",
			"Sync - MongoOperations - MongoTemplate - querying - findBy - derivation - Between": "",
			"Sync - MongoOperations - MongoTemplate - querying - findBy - derivation - In": "",
			"Sync - MongoOperations - MongoTemplate - querying - findBy - derivation - NotIn": "",
			"Sync - MongoOperations - MongoTemplate - querying - findBy - derivation - IsNotNull": "",
			"Sync - MongoOperations - MongoTemplate - querying - findBy - derivation - NotNull": "",
			"Sync - MongoOperations - MongoTemplate - querying - findBy - derivation - IsNull": "",
			"Sync - MongoOperations - MongoTemplate - querying - findBy - derivation - Null": "",
			"Sync - MongoOperations - MongoTemplate - querying - findBy - derivation - Like": "",
			"Sync - MongoOperations - MongoTemplate - querying - findBy - derivation - StartingWith": "",
			"Sync - MongoOperations - MongoTemplate - querying - findBy - derivation - EndingWith": "",
			"Sync - MongoOperations - MongoTemplate - querying - findBy - derivation - NotLike": "",
			"Sync - MongoOperations - MongoTemplate - querying - findBy - derivation - IsNotLike": "",
			"Sync - MongoOperations - MongoTemplate - querying - findBy - derivation - Containing on String": "",
			"Sync - MongoOperations - MongoTemplate - querying - findBy - derivation - NotContaining on String": "",
			"Sync - MongoOperations - MongoTemplate - querying - findBy - derivation - Containing on Collection": "",
			"Sync - MongoOperations - MongoTemplate - querying - findBy - derivation - NotContaining on Collection": "",
			"Sync - MongoOperations - MongoTemplate - querying - findBy - derivation - Regex": "",
			"Sync - MongoOperations - MongoTemplate - querying - findBy - derivation - (No keyword)": "",
			"Sync - MongoOperations - MongoTemplate - querying - findBy - derivation - Not": "",
			"Sync - MongoOperations - MongoTemplate - querying - findBy - derivation - Geo-spatial - Near": "",
			"Sync - MongoOperations - MongoTemplate - querying - findBy - derivation - Geo-spatial - Near+Dist": "",
			"Sync - MongoOperations - MongoTemplate - querying - findBy - derivation - Geo-spatial - NearDist+Dist": "",
			"Sync - MongoOperations - MongoTemplate - querying - findBy - derivation - Geo-spatial - Within (Circle)": "",
			"Sync - MongoOperations - MongoTemplate - querying - findBy - derivation - Geo-spatial - Within (Box)": "",
			"Sync - MongoOperations - MongoTemplate - querying - findBy - derivation - IsTrue": "",
			"Sync - MongoOperations - MongoTemplate - querying - findBy - derivation - True": "",
			"Sync - MongoOperations - MongoTemplate - querying - findBy - derivation - IsFalse": "",
			"Sync - MongoOperations - MongoTemplate - querying - findBy - derivation - False": "",
			"Sync - MongoOperations - MongoTemplate - querying - findBy - derivation - Exists": "",
			"Sync - MongoOperations - MongoTemplate - querying - findAll": "",
			"Sync - MongoOperations - MongoTemplate - querying - findAndModify": "",
			"Sync - MongoOperations - MongoTemplate - querying - findAndModify": "",
			"Sync - MongoOperations - MongoTemplate - querying - findAndModify": "",
			"Sync - MongoOperations - MongoTemplate - querying - findAndModify - FindAndModifyOptions": "",
			"Sync - MongoOperations - MongoTemplate - querying - findAndReplace": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query": "All find methods take a Query object as a parameter.",
			"Sync - MongoOperations - MongoTemplate - querying - Query - methods - Query addCriteria (Criteria criteria)": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - methods - Field fields ()": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - methods - Query limit (int limit)": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - methods - Query skip (int skip)": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - methods - Query with (Sort sort)": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - BasicQuery": "You can also use BasicQuery to create Query instances from plain JSON Strings",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Criteria": "This object defines the criteria and options used to perform the query. The criteria are specified by using a Criteria object that has a static factory method named where to instantiate a new Criteria object. We recommend using static imports for org.springframework.data.mongodb.core.query.Criteria.where and Query.query to make the query more readable.",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Criteria - methods - all": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Criteria - methods - and": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Criteria - methods - andOperator": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Criteria - methods - elemMatch": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Criteria - methods - exists": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Criteria - methods - gt": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Criteria - methods - gte": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Criteria - methods - in": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Criteria - methods - is": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Criteria - methods - lt": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Criteria - methods - lte": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Criteria - methods - mod": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Criteria - methods - ne": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Criteria - methods - nin": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Criteria - methods - norOperator": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Criteria - methods - not": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Criteria - methods - orOperator": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Criteria - methods - regex": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Criteria - methods - size": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Criteria - methods - type": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Criteria - methods - matchingDocumentStructure": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Criteria - methods - bits": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Criteria - methods - Geospatial - within": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Criteria - methods - Geospatial - withinSphere": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Criteria - methods - Geospatial - near": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Criteria - methods - Geospatial - nearSphere": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Criteria - methods - Geospatial - minDistance": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Criteria - methods - Geospatial - maxDistance ": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Criteria - methods - Text": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Criteria - methods - Text - TextQuery": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Criteria - methods - Text - TextQuery": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Criteria - methods - Text - TextCriteria": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Criteria - methods - Text - TextCriteria": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - with": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Sort": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Pagination - Pageable": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Pagination - Pageable": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Grouping - GroupBy": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Grouping - GroupBy - GroupByResults": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Distinct": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Collation": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Collation": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Collation": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Collation": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Collation": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Collation": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - Collation": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - MongoJsonSchema": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - MongoJsonSchema": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - MongoJsonSchema": "",
			"Sync - MongoOperations - MongoTemplate - querying - Query - MongoJsonSchema": "",
			"Sync - MongoOperations - MongoTemplate - querying - QuerybyExample": "from Spring Data",
			"Sync - MongoOperations - MongoTemplate - querying - MapReduce": "",
			"Sync - MongoOperations - MongoTemplate - querying - MapReduce": "",
			"Sync - MongoOperations - MongoTemplate - querying - MapReduce": "",
			"Sync - MongoOperations - MongoTemplate - querying - MapReduce - MapReduceResults": "",
			"Sync - MongoOperations - MongoTemplate - querying - ScriptOperations": "",
			"Sync - MongoOperations - MongoTemplate - querying - ScriptOperations": "",
			"Sync - MongoOperations - MongoTemplate - querying - ScriptOperations": "",
			"Sync - MongoOperations - MongoTemplate - querying - Aggregation": "An Aggregation represents a MongoDB aggregate operation and holds the description of the aggregation pipeline instructions. Aggregations are created by invoking the appropriate newAggregation(…) static factory method of the Aggregation class, which takes a list of AggregateOperation and an optional input class. The actual aggregate operation is executed by the aggregate method of the MongoTemplate, which takes the desired output class as a parameter",
			"Sync - MongoOperations - MongoTemplate - querying - Aggregation - AggregationOperation": "An AggregationOperation represents a MongoDB aggregation pipeline operation and describes the processing that should be performed in this aggregation step. Although you could manually create an AggregationOperation, we recommend using the static factory methods provided by the Aggregate class to construct an AggregateOperation.",
			"Sync - MongoOperations - MongoTemplate - querying - Aggregation - AggregationOperation - Pipeline Aggregation Operators": "bucket, bucketAuto, count, facet, geoNear, graphLookup, group, limit, lookup, match, project, replaceRoot, skip, sort, unwind",
			"Sync - MongoOperations - MongoTemplate - querying - Aggregation - AggregationOperation - Set Aggregation Operators": "setEquals, setIntersection, setUnion, setDifference, setIsSubset, anyElementTrue, allElementsTrue",
			"Sync - MongoOperations - MongoTemplate - querying - Aggregation - AggregationOperation - Group Aggregation Operators": "addToSet, first, last, max, min, avg, push, sum, (*count), stdDevPop, stdDevSamp",
			"Sync - MongoOperations - MongoTemplate - querying - Aggregation - AggregationOperation - Boolean Aggregation Operators": "",
			"Sync - MongoOperations - MongoTemplate - querying - Aggregation - AggregationOperation - Comparison Aggregation Operators": "eq (*via: is), gt, gte, lt, lte, ne",
			"Sync - MongoOperations - MongoTemplate - querying - Aggregation - AggregationOperation - Arithmetic Aggregation Operators": "abs, add (*via plus), ceil, divide, exp, floor, ln, log, log10, mod, multiply, pow, sqrt, subtract (*via minus), trunc",
			"Sync - MongoOperations - MongoTemplate - querying - Aggregation - AggregationOperation - String Aggregation Operators": "concat, substr, toLower, toUpper, stcasecmp, indexOfBytes, indexOfCP, split, strLenBytes, strLenCP, substrCP, trim, ltrim, rtim",
			"Sync - MongoOperations - MongoTemplate - querying - Aggregation - AggregationOperation - Date Aggregation Operators": "dayOfYear, dayOfMonth, dayOfWeek, year, month, week, hour, minute, second, millisecond, dateToString, dateFromString, dateFromParts, dateToParts, isoDayOfWeek, isoWeek, isoWeekYear",
			"Sync - MongoOperations - MongoTemplate - querying - Aggregation - AggregationOperation - Array Aggregation Operators": "arrayElementAt, arrayToObject, concatArrays, filter, in, indexOfArray, isArray, range, reverseArray, reduce, size, slice, zip",
			"Sync - MongoOperations - MongoTemplate - querying - Aggregation - AggregationOperation - Literal Aggregation Operators": "literal",
			"Sync - MongoOperations - MongoTemplate - querying - Aggregation - AggregationOperation - Variable Aggregation Operators": "map",
			"Sync - MongoOperations - MongoTemplate - querying - Aggregation - AggregationOperation - Conditional Aggregation Operators": "cond, ifNull, switch",
			"Sync - MongoOperations - MongoTemplate - querying - Aggregation - AggregationOperation - Type Aggregation Operators": "type",
			"Sync - MongoOperations - MongoTemplate - querying - Aggregation - AggregationOperation - Lookup Aggregation Operators": "",
			"Sync - MongoOperations - MongoTemplate - querying - Aggregation - AggregationOperation - Convert Aggregation Operators": "convert, toBool, toDate, toDecimal, toDouble, toInt, toLong, toObjectId, toString",
			"Sync - MongoOperations - MongoTemplate - querying - Aggregation - AggregationOperation - Object Aggregation Operators": "objectToArray, mergeObjects",
			"Sync - MongoOperations - MongoTemplate - querying - Aggregation - AggregationResults": "AggregationResults is the container for the result of an aggregate operation. It provides access to the raw aggregation result, in the form of a Document to the mapped objects and other information about the aggregation.",
			"Sync - MongoOperations - MongoTemplate - querying - Aggregation - Projection": "Projection expressions are used to define the fields that are the outcome of a particular aggregation step. Projection expressions can be defined through the project method of the Aggregation class, either by passing a list of String objects or an aggregation framework Fields object. The projection can be extended with additional fields through a fluent API by using the and(String) method and aliased by using the as(String) method. Note that you can also define fields with aliases by using the Fields.field static factory method of the aggregation framework, which you can then use to construct a new Fields instance. References to projected fields in later aggregation stages are valid only for the field names of included fields or their aliases (including newly defined fields and their aliases). Fields not included in the projection cannot be referenced in later aggregation stages.",
			"Sync - MongoOperations - MongoTemplate - querying - Aggregation - Faceted": "",
			"Sync - MongoOperations - MongoTemplate - querying - Aggregation - Faceted - BucketOperation": "",
			"Sync - MongoOperations - MongoTemplate - querying - Aggregation - Faceted - BucketAutoOperation": "",
			"Sync - MongoOperations - MongoTemplate - querying - Aggregation - Faceted - sortByCount": "",
			"Sync - MongoOperations - MongoTemplate - querying - Aggregation - Faceted - SpEL": "",
			"Sync - MongoOperations - MongoTemplate - querying - Aggregation - Multifaceted": "",
			"Sync - MongoOperations - MongoTemplate - querying - Aggregation - Multifaceted - FacetOperation": "",
			"Sync - MongoOperations - MongoTemplate - querying - @Query": "@Query(\"{ 'name' : ?0 }\")",
			"Sync - MongoOperations - MongoTemplate - querying - QueryDSL": "QueryDSL used Q-classes for creating queries. But, since we don’t really want to create these by hand, we need to generate them somehow.",
			"Sync - MongoOperations - MongoTemplate - removing - delete - Delete…By": "",
			"Sync - MongoOperations - MongoTemplate - removing - findAllAndRemove": "",
			"Sync - MongoOperations - MongoTemplate - removing - remove": "",
			"Sync - MongoOperations - MongoTemplate - removing - remove": "",
			"Sync - MongoOperations - MongoTemplate - removing - remove": "",
			"Sync - MongoOperations - FluentMongoOperations": "FluentMongoOperations provides a more narrow interface for the common methods of MongoOperations and provides a more readable, fluent API. The entry points (insert(…), find(…), update(…), and others) follow a natural naming schema based on the operation to be run.",
			"Sync - MongoOperations - FluentMongoOperations - query": "",
			"Sync - MongoOperations - FluentMongoOperations - insert": "",
			"Sync - MongoOperations - FluentMongoOperations - update": "",
			"Sync - MongoOperations - FluentMongoOperations - remove": "",
			"Sync - MongoOperations - FluentMongoOperations - aggregateAndReturn": "",
			"Sync - MongoOperations - FluentMongoOperations - mapReduce": "",
			"Sync - MongoOperations - MongoTemplate - WriteResultChecking": "When in development, it is handy to either log or throw an exception if the com.mongodb.WriteResult returned from any MongoDB operation contains an error. It is quite common to forget to do this during development and then end up with an application that looks like it runs successfully when, in fact, the database was not modified according to your expectations. You can set the WriteResultChecking property of MongoTemplate to one of the following values: EXCEPTION or NONE, to either throw an Exception or do nothing, respectively. The default is to use a WriteResultChecking value of NONE.",
			"Sync - MongoOperations - MongoTemplate - WriteConcern": "If it has not yet been specified through the driver at a higher level (such as com.mongodb.MongoClient), you can set the com.mongodb.WriteConcern property that the MongoTemplate uses for write operations. If the WriteConcern property is not set, it defaults to the one set in the MongoDB driver’s DB or Collection setting.",
			"Sync - MongoOperations - MongoTemplate - WriteConcern - MongoAction": "You can use the MongoAction argument to determine the WriteConcern value or use the value of the Template itself as a default. MongoAction contains the collection name being written to, the java.lang.Class of the POJO, the converted Document, the operation (REMOVE, UPDATE, INSERT, INSERT_LIST, or SAVE), and a few other pieces of contextual information. ",
			"Sync - MongoOperations - MongoTemplate - WriteConcernResolver": "For more advanced cases where you want to set different WriteConcern values on a per-operation basis (for remove, update, insert, and save operations), a strategy interface called WriteConcernResolver can be configured on MongoTemplate. Since MongoTemplate is used to persist POJOs, the WriteConcernResolver lets you create a policy that can map a specific POJO class to a WriteConcern value.",
			"Sync - MongoOperations - MongoTemplate - IndexOperations": "",
			"Sync - MongoOperations - MongoTemplate - MongoCollection": "",
			"Sync - MongoOperations - MongoTemplate - MongoCollection": "",
			"Sync - MongoOperations - MongoTemplate - MongoCollection": "",
			"Sync - MongoOperations - MongoTemplate - MongoCollection": "",
			"Sync - MongoOperations - MongoTemplate - execute": "",
			"Sync - MongoOperations - MongoTemplate - execute": "",
			"Sync - MongoOperations - MongoTemplate - execute": "",
			"Sync - MongoOperations - MongoTemplate - execute - callbak": "",
			"Sync - MongoOperations - MongoTemplate - execute - callbak": "",
			"Sync - MongoOperations - MongoTemplate - execute - callbak": "",
			"Sync - MongoOperations - MongoTemplate - execute - callbak": "",
			"Sync - MongoOperations - MongoTemplate - execute - callbak": "",
			"Sync - MongoOperations - MongoTemplate - execute": "",
			"Sync - MongoOperations - MongoTemplate - ApplicationEvent": "",
			"Sync - MongoOperations - MongoTemplate - ApplicationEvent": "",
			"Sync - MongoOperations - MongoTemplate - ApplicationEvent": "",
			"Sync - MongoOperations - MongoTemplate - ApplicationEvent": "",
			"Sync - MongoOperations - MongoTemplate - ApplicationEvent": "",
			"Sync - GridFsOperations - GridFsTemplate": "",
			"Sync - GridFsOperations - GridFsTemplate": "",
			"Sync - GridFsOperations - GridFsTemplate": "",
			"Sync - ChangeStreams": "",
			"Sync - ChangeStreams": "",
			"Sync - ChangeStreams": "",
			"Sync - ChangeStreams": "",
			"Sync - ChangeStreams": "",
			"Sync - ChangeStreams": "",
			"Sync - MongoDBSessions": "",
			"Sync - MongoDBTransactions": "",
			"Sync - MongoDBTransactions - TransactionTemplate": "",
			"Sync - MongoDBTransactions - TransactionTemplate": "",
			"Sync - MongoDBTransactions - TransactionTemplate": "",
			"Sync - MongoDBTransactions - MongoTransactionManager": "",
			"Sync - MongoDBTransactions - MongoTransactionManager": "",
			"Sync - MongoDBTransactions - MongoTransactionManager": "",

			"Async": "SECTION",
			"Async - config - @Bean - Mongoclient": "abstract com.mongodb.reactivestreams.client.MongoClient",
			"Async - config - @Bean - ReactiveMongoDatabaseFactory": "",
			"Async - config - @Bean - ReactiveMongoTemplate": "",
			"Async - config - AbstractReactiveMongoConfiguration": "",
			"Async - config - AbstractReactiveMongoConfiguration - reactiveMongoClient()": "Return the Reactive Streams MongoClient instance to connect to.",
			"Async - config - AbstractReactiveMongoConfiguration - reactiveMongoDbFactory()": "Creates a ReactiveMongoDatabaseFactory to be used by the ReactiveMongoOperations.",
			"Async - config - AbstractReactiveMongoConfiguration - mappingMongoConverter(": "Creates a MappingMongoConverter using the configured reactiveMongoDbFactory() and MongoConfigurationSupport.mongoMappingContext().",
			"Async - config - AbstractReactiveMongoConfiguration - reactiveMongoTemplate()": "Creates ReactiveMongoOperations.",
			"Async - ReactiveMongoRepository": "Reactive data repositories are written by implementing the ReactiveCrudRepository interface instead of the normal CrudRepository, and by having our interface methods return the reactive Mono and Flux types",
			"Async - ReactiveMongoRepository - config - @EnableReactiveMongoRepositories": "",
			"Async - ReactiveMongoRepository - methods - findAll(Example<S> example)": "",
			"Async - ReactiveMongoRepository - methods - findAll(Example<S> example, Sort sort) ": "",
			"Async - ReactiveMongoRepository - methods - insert(Iterable<S> entities)": "",
			"Async - ReactiveMongoRepository - methods - insert(org.reactivestreams.Publisher<S> entities)": "",
			"Async - ReactiveMongoRepository - methods - insert(S entity)": "",
			"Async - ReactiveMongoOperations - ReactiveMongoTemplate": "",
			"Async - ReactiveMongoOperations - ReactiveMongoTemplate - WriteResultCheckingPolicy": "",
			"Async - ReactiveMongoOperations - ReactiveMongoTemplate - WriteConcern": "",
			"Async - ReactiveMongoOperations - ReactiveMongoTemplate - WriteConcern - WriteConcernResolver": "",
			"Async - ReactiveMongoOperations - ReactiveMongoTemplate - ReadPreference": "",
			"Async - ReactiveMongoOperations - ReactiveMongoTemplate - saving": "",
			"Async - ReactiveMongoOperations - ReactiveMongoTemplate - saving": "",
			"Async - ReactiveMongoOperations - ReactiveMongoTemplate - saving": "",
			"Async - ReactiveMongoOperations - ReactiveMongoTemplate - updating": "",
			"Async - ReactiveMongoOperations - ReactiveMongoTemplate - updating": "",
			"Async - ReactiveMongoOperations - ReactiveMongoTemplate - updating": "",
			"Async - ReactiveMongoOperations - ReactiveMongoTemplate - removing": "",
			"Async - ReactiveMongoOperations - ReactiveMongoTemplate - removing": "",
			"Async - ReactiveMongoOperations - ReactiveMongoTemplate - removing": "",
			"Async - ReactiveMongoOperations - ReactiveMongoTemplate - executing": "",
			"Async - ReactiveMongoOperations - ReactiveMongoTemplate - executing": "",
			"Async - ReactiveMongoOperations - ReactiveMongoTemplate - executing": "",
			"Async - ReactiveMongoOperations - ReactiveMongoTemplate - executing": "",
			"Async - ReactiveMongoOperations - ReactiveMongoTemplate - executing": "",
			"Async - MongoDBSessions - ClientSession": "",
			"Async - MongoDBTransactions": "",

			"GeoJSON": "SECTION",
			"Geospatial": "",
			"Geospatial - usage - domain objects": "",
			"Geospatial - usage - repositories": "",
			"Geospatial - GeoJSON": "GeoJSON is a format for encoding a variety of geographic data structures. The GeoJSON Specification (RFC 7946)",
			"Geospatial - GeoJSON - types": "The org.springframework.data.mongodb.core.geo package contains types such as GeoJsonPoint, GeoJsonPolygon, and others. These types are extend the existing org.springframework.data.geo types.",
			"Geospatial - GeoJSON - types - GeoJsonPoint": "",
			"Geospatial - GeoJSON - types - GeoJsonPolygon": "",
			"Geospatial - GeoJSON - types - GeoJsonMultiPoint": "",
			"Geospatial - GeoJSON - types - GeoJsonMultiPolygon": "",
			"Geospatial - GeoResults": "",

			"auditing": "SECTION",
			"Auditing": "",
			"Auditing - CreatedBy": "",
			"Auditing - LastModifiedBy": "",
			"Auditing - CreatedDate": "",
			"Auditing - LastModifiedDate": "",
			"Auditing - AbstractAuditable": "",
			"Auditing - AuditorAware": "",
			"Auditing - <mongo:auditing/>": ""
}