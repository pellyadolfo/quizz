{

	"Systems - Design": "SECTION",
	"Systems - Design 0": "https://www.linkedin.com/posts/nk-systemdesign-one_if-you-want-to-start-with-system-designin-activity-7320427413899784192-KcFy?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 1": "https://www.linkedin.com/posts/rani-dhage_system-design-concepts-every-developer-should-activity-7321403289252573185-KqSn/?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 2": "https://www.linkedin.com/posts/alexxubyte_systemdesign-coding-interviewtips-activity-7320110326635520001-mdMb/?utm_source=share&utm_medium=member_desktop&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 3": "https://www.linkedin.com/posts/behzaddara_system-design-activity-7319642234457325568-vQRw?utm_source=share&utm_medium=member_desktop&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 4": "https://www.linkedin.com/posts/manisha-lodha-b72713200_data-engineering-system-design-core-concepts-activity-7318097530435596288-uA4r?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 5": "https://www.linkedin.com/posts/qaisar-abbas_system-design-interview-handbook-activity-7321074521229221889-XKqq?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 6": "https://www.linkedin.com/posts/nelsonamigoscode_systemdesign-coding-interviewtips-activity-7317875626936336384-dr-D/?utm_source=share&utm_medium=member_desktop&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 7": "https://www.linkedin.com/posts/anshul-chhabra-46ba9b113_i-invested-almost-3-hours-picking-the-best-activity-7316461366771339267-5nTG/?utm_source=share&utm_medium=member_desktop&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 8": "https://www.linkedin.com/posts/alexxubyte_systemdesign-coding-interviewtips-activity-7315399350392692736-TtYv?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 9": "https://www.linkedin.com/posts/ankit-pangasa_system-design-questions-activity-7313368396828459008-2y4w?utm_source=share&utm_medium=member_desktop&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 10": "https://www.linkedin.com/posts/alexxubyte_systemdesign-coding-interviewtips-activity-7313587375257866241-jMUC?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 11": "https://www.linkedin.com/posts/ninadurann_loadbalancer-devops-softwareengineer-activity-7313440121507274754-_2-Q?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 12": "https://www.linkedin.com/posts/tauseeffayyaz_softwareengineering-systemdesign-coding-activity-7310901530201628672-dCUY?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 13": "https://www.linkedin.com/posts/vsadhwani_for-the-system-design-portion-of-your-cloud-activity-7312496032385327104-6AMx?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 14": "https://www.linkedin.com/posts/pooja-jain-898253106_data-engineering-systemdesign-activity-7308419838186508288-Dqdo?utm_source=share&utm_medium=member_desktop&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 15": "https://www.linkedin.com/posts/nk-systemdesign-one_if-i-had-to-start-over-with-system-design-activity-7304856987815542784-bwHC?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 16": "https://www.linkedin.com/posts/careerwithhina_systemdesign-activity-7302183478865932288-ZUrB?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 17": "https://www.linkedin.com/posts/alexxubyte_systemdesign-coding-interviewtips-activity-7304540849902661632-UJ0b?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 18": "https://www.linkedin.com/posts/goyalshalini_a-clear-understanding-of-some-basic-concepts-activity-7305112814828875776-Fhrt?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 19": "https://www.linkedin.com/posts/bhumikakr258_splunk-searchheadclustering-splunkarchitecture-activity-7320834224402419714-X6eH/?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 20": "https://www.linkedin.com/posts/jatinbansaldevops_solution-architect-activity-7320983572897501184-H9o3/?utm_source=share&utm_medium=member_desktop&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 21": "https://www.linkedin.com/posts/saksham-mangla-18aa68289_sql-activity-7317928082013626371-4aVs/?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 22": "https://www.linkedin.com/posts/tasirdad_top-50-networking-interview-questions-activity-7316180031406276608-7aov?utm_source=share&utm_medium=member_desktop&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 23": "https://www.linkedin.com/posts/maaouiaadem_networking-for-devops-activity-7313529530038558720-WhJ8?utm_source=share&utm_medium=member_desktop&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 24": "https://www.linkedin.com/posts/maheshma_cloud-engineering-aws-activity-7314097215243702272-U5xP/?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 25": "https://www.linkedin.com/posts/mansi-agrawal-1501_systemdesign-sde2-hld-activity-7322577388851101696-MaoK/?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 26": "https://www.linkedin.com/posts/prachi1agarwal_systemdesign-microservices-lowleveldesign-activity-7324004204086222848-Ed5p?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 27": "https://www.linkedin.com/posts/activity-7315527690667646978-VIql/?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 28": "https://www.linkedin.com/posts/ashsau_high-level-design-hld-vs-low-level-design-activity-7325101947005345794-pss7?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 29": "https://www.linkedin.com/posts/vsadhwani_5-must-see-github-repos-to-leverage-while-activity-7326997248288944128-UuMa/?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 30": "https://www.linkedin.com/posts/ashishps1_30-blogs-to-learn-30-system-design-fundamentals-activity-7328659612201549827-8m7C?utm_source=share&utm_medium=member_desktop&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 31": "https://www.linkedin.com/posts/lakshmi-marikumar-513a6b15_systemdesign-systemdesign-softwareengineering-activity-7329346587246100480-mayI/?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 32": "https://www.linkedin.com/posts/rani-dhage_system-design-concepts-every-developer-should-activity-7321403289252573185-KqSn?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 33": "https://www.linkedin.com/posts/rocky-bhatia-a4801010_linkedinengineering-systemdesign-ai-activity-7330213152665587712-RhR2?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 34": "https://www.linkedin.com/posts/elliotone_ef-core-strongly-typed-configuration-classes-ugcPost-7330260976828641280-CnSN/?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 35": "https://www.linkedin.com/posts/abhilash-sharma-a72781290_system-design-in-just-60-days-activity-7332420918436106240-kUnW/?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 36": "https://www.linkedin.com/posts/rocky-bhatia-a4801010_%F0%9D%90%8C%F0%9D%90%9A%F0%9D%90%AC%F0%9D%90%AD%F0%9D%90%9E%F0%9D%90%AB%F0%9D%90%A2%F0%9D%90%A7%F0%9D%90%A0-%F0%9D%90%92%F0%9D%90%B2%F0%9D%90%AC%F0%9D%90%AD%F0%9D%90%9E%F0%9D%90%A6-%F0%9D%90%83%F0%9D%90%9E%F0%9D%90%AC%F0%9D%90%A2%F0%9D%90%A0%F0%9D%90%A7-activity-7331648105320210432-sDrK?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 37": "https://www.linkedin.com/posts/tannika-majumder-424a5040_i-have-asked-this-system-design-question-activity-7331672728501977088-VWG2?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 38": "https://www.linkedin.com/posts/alexxubyte_systemdesign-coding-interviewtips-activity-7331706736543744000-6I3h?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 39": "https://www.linkedin.com/posts/rocky-bhatia-a4801010_systemdesign-scalability-architecture-activity-7332367345006379009-u11Q?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 40": "https://www.linkedin.com/posts/nikkisiapno_clean-architecture-explained-clean-architecture-activity-7333094564892708865-ZKQ9/?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 41": "https://www.linkedin.com/posts/maheshma_agile-scaledagileframework-scrum-activity-7332216437362565120-dqOM?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 42": "https://www.linkedin.com/posts/dream-tech-it-solutions_top-architectural-styles-the-method-to-activity-7332979855774412800-nHFG?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 43": "https://www.linkedin.com/posts/leonardosantosmacias_8-system-design-concepts-you-must-know-article-activity-7332513289165279233-u3RT?utm_source=share&utm_medium=member_desktop&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 44": "https://www.linkedin.com/posts/maheshma_technology-systemdesign-architecture-activity-7334390781203357696-L-em?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 45": "https://www.linkedin.com/posts/goyalshalini_system-design-stories-activity-7333016674398351361-CJjw?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"Systems - Design 46": "",
	"Systems - Design 47": "",
	"Systems - Design 48": "",
	"Systems - Design 49": "",
	"Systems - Design 50": "",
	"Systems - Design 51": "",
	"Systems - Design - Goals - Scalability": "",
	"Systems - Design - Goals - Performance": "",
	"Systems - Design - Goals - Complexity": "",
	"Systems - Design - Goals - Maintainability": "",
	"Systems - Design - Goals - Reliability": "",
	"Systems - Design - Goals - Security": "",
	"Systems - Design - Types - HLD": "High-Level System Design provides a broad overview of the system architecture. It focuses on how various components interact and ensures that the system meets scalability, performance, and security goals.",
	"Systems - Design - Types - HLD - ArchitecturalPatterns": "Monolithic, Microservices, Event-driven, etc.",
	"Systems - Design - Types - HLD - KeyComponents": "Databases, APIs, Load Balancers, Cache, Message Queues",
	"Systems - Design - Types - HLD - DeploymentStrategies": "Cloud-based, On-Premises, or Hybrid",
	"Systems - Design - Types - LLD": "Low-Level System Design focuses on the finer details of individual components. It deals with class structures, algorithms, and data handling methods.",
	"Systems - Design - Types - LLD - DataStructures": "HashMaps, Trees, Graphs, Queues.",
	"Systems - Design - Types - LLD - Algorithms": "Sorting, Searching, Load Distribution, Scheduling.",
	"Systems - Design - Types - LLD - ClassDiagrams": "Relationships between objects and their behaviors.",

	"Systems - Arch": "SECTION",
	"Systems - Arch - HexagonalArchitecture": "https://www.geeksforgeeks.org/hexagonal-architecture-system-design/",
	"Systems - Arch - HexagonalArchitecture - Components": "",
	"Systems - Arch - HexagonalArchitecture - Components - Entities": "Entities (Core Business Logic). At the heart of Hexagonal Architecture are Entities, which represent the core business logic and rules of the application. These entities are completely independent of external systems and remain isolated from concerns such as databases or user interfaces. The goal is to ensure that the business logic is encapsulated and can operate independently of how the data is received or persisted.",
	"Systems - Arch - HexagonalArchitecture - Components - Ports": "Ports (Interfaces). Ports are the interfaces that define how external systems communicate with the core logic. These ports act as boundaries between the core and the outside world.",
	"Systems - Arch - HexagonalArchitecture - Components - Ports - Inbound": "Inbound Ports: Define how the external world (such as a user interface, API, or message queue) can interact with the core system. They are responsible for receiving input and triggering the business logic in the core.",
	"Systems - Arch - HexagonalArchitecture - Components - Ports - Outbound": "Outbound Ports: Define how the core system interacts with external systems (such as databases or external APIs) to send or receive data. These ports abstract the communication details and ensure that the core only interacts with external components through these interfaces.",
	"Systems - Arch - HexagonalArchitecture - Components - Adapters": "Adapters (Implementations of Ports). Adapters are the implementation of the ports. They are responsible for translating external data (such as HTTP requests, database queries, or messages from queues) into something that the core can understand, and vice versa. Adapters allow different external systems to interact with the core system without the core being directly aware of the external system’s specifics.",
	"Systems - Arch - HexagonalArchitecture - Components - Adapters - Inbound": "Inbound Adapters: Handle communication from external sources, such as HTTP controllers, UI components, or messaging systems, and convert them into a format understood by the core through inbound ports.",
	"Systems - Arch - HexagonalArchitecture - Components - Adapters - Outbound": "Outbound Adapters: Handle communication with external services or databases, such as repository implementations, external APIs, or data storage systems. They take data from the core, process it as needed, and send it to the appropriate external systems.",
	"Systems - Arch - HexagonalArchitecture - Components - ApplicationServices": "Application Services (Interactors/Use Cases). Application Services, also known as Interactors or Use Cases, act as the intermediary between the entities (core business logic) and the external layers (ports and adapters). These services coordinate the flow of data between inbound ports (e.g., user requests) and outbound ports (e.g., data sources). They contain the application logic that drives the business process but remain separate from the core business rules. For example, an Interactor might take user input from a web form (via an inbound adapter), process it through business rules, and then persist the results using a repository (via an outbound adapter).",
	"Systems - Arch - HexagonalArchitecture - Components - Repositories": "Repositories (Persistence Layer). Repositories are used to manage the persistence of data. They provide a layer between the core logic and the data storage system (like a database). Repositories are typically implemented as outbound adapters that interact with the database through outbound ports. They encapsulate the logic required to retrieve and store data in external storage systems, allowing the core logic to remain database-agnostic.",
	"Systems - Arch - HexagonalArchitecture - Components - TransportLayer": "The Transport Layer handles the communication between external users or systems and the application. This can include handling HTTP requests, message queues, or other forms of input/output operations. The transport layer interacts with the inbound adapters to forward requests to the core system. In Hexagonal Architecture, this layer is decoupled from the business logic, allowing the system to support multiple communication mechanisms (e.g., REST API, WebSocket, etc.).",
	"Systems - Arch - HexagonalArchitecture - Components - ExternalSystems": "External Systems (Infrastructure). External systems include databases, APIs, message queues, and other infrastructure components that the application interacts with. In Hexagonal Architecture, these systems are connected to the core logic through outbound adapters and ports, ensuring that the core system is unaware of the external system’s details.",
	"Systems - Arch - CleanArchitecture": "",
	"Systems - Arch - OnionArchitecture": "",
	"Systems - Arch - SOAArchitecture": "",
	"Systems - Arch - LayeredArchitecture": ""

}