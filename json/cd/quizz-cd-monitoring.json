{

	"CD - Monitoring": "SECTION",
	"CD - Monitoring 0": "https://www.linkedin.com/posts/pritibhosale-awsdevops_prometheus-grafana-docs-activity-7339914853664415744-ZmU8?utm_source=share&utm_medium=member_desktop&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"CD - Monitoring 1": "https://www.linkedin.com/posts/manjunath-kotegar_prometheus-activity-7334249347481554944-j9Vv?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"CD - Monitoring 2": "https://www.linkedin.com/posts/prasad-zarad-1b383b28a_prometheus-and-grafana-activity-7326212811099975680-nkPA?utm_source=share&utm_medium=member_desktop&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"CD - Monitoring 3": "https://www.linkedin.com/posts/abhijeet-kamble-164888264_syswatch-a-script-for-server-analysis-activity-7323546525773512704-heuB/?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"CD - Monitoring 4": "https://www.linkedin.com/posts/amit-panda-741570219_prometheusgrafanasetup-activity-7323266750957899776-hTm1?utm_source=share&utm_medium=member_desktop&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"CD - Monitoring 5": "https://www.linkedin.com/posts/sandip-das-developer_60daysofdevops-activity-7326606918653792256-JRr3/?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"CD - Monitoring 6": "https://www.linkedin.com/posts/emmanuel-oluyemi-43588a217_%F0%9D%90%8C%F0%9D%90%A8%F0%9D%90%A7%F0%9D%90%A2%F0%9D%90%AD%F0%9D%90%A8%F0%9D%90%AB%F0%9D%90%A2%F0%9D%90%A7%F0%9D%90%A0-%F0%9D%90%9A%F0%9D%90%A7%F0%9D%90%9D-%F0%9D%90%8B%F0%9D%90%A8%F0%9D%90%A0%F0%9D%90%A0%F0%9D%90%A2-activity-7340355822641700864-NGvn?utm_source=share&utm_medium=member_desktop&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"CD - Monitoring 7": "https://www.linkedin.com/posts/prasanjit-sahoo4_prometheus-grafana-made-simple-activity-7340262805859639296-ctv1?utm_source=share&utm_medium=member_desktop&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"CD - Monitoring 8": "https://www.linkedin.com/posts/aisha-s-56177a236_prometheus-activity-7340629291417653248-idvh/?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"CD - Monitoring 9": "https://www.linkedin.com/posts/shubhamkarale_promothesis-graphia-by-shubham-karale-activity-7340061556539285505-Ui-k?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"CD - Monitoring10": "https://www.linkedin.com/posts/pritibhosale_prometheus-grafana-docs-ugcPost-7339914850426335232-gJ2h/?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"CD - Monitoring11": "https://www.linkedin.com/posts/mantasha-ansari-47162b24a_step-to-monitor-aws-resources-using-nagios-activity-7345413320385925120-V4aY?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"CD - Monitoring12": "https://www.linkedin.com/posts/adityajaiswal7_devops-shack-observability-vs-monitoring-activity-7343850960953217025-vR3c?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"CD - Monitoring13": "",
	"CD - Monitoring14": "",
	"CD - Monitoring15": "",
	"CD - Monitoring16": "",
	"CD - Monitoring17": "",
	"CD - Monitoring18": "",
	"CD - Monitoring19": "",
	"CD - Monitoring20": "",
	"CD - Monitoring21": "",
	"CD - Monitoring ": ".",
	"CD - Monitoring - Features - Purpose": "Monitoring involves collecting, analyzing, and displaying metrics and logs to track the health and performance of a system.",
	"CD - Monitoring - Features - Reactive": "Reactive (detects issues after they occur).",
	"CD - Monitoring - Features - Usage": "Best for known problems (e.g., server downtime, high response time).",
	"CD - Monitoring - Process - Inputs - Logging": "Check application logs for errors - Centralizes logs from different microservices (Microservice 1, Microservice 2). - Allows for easier tracking and troubleshooting of issues.",
	"CD - Monitoring - Process - Inputs - Logging - Features - Purpose": "Records discrete events/state",
	"CD - Monitoring - Process - Inputs - Logging - Features - Scope": "Single application/node.",
	"CD - Monitoring - Process - Inputs - Logging - Features - Data": "Unstructured or semi-structured (e.g., 'Error: DB timeout').",
	"CD - Monitoring - Process - Inputs - Logging - Features - Granularity": "High (per-event details).",
	"CD - Monitoring - Process - Inputs - Logging - Features - UseCase": "Debugging errors, auditing.",
	"CD - Monitoring - Process - Inputs - Logging - Tools - Splunk": "",
	"CD - Monitoring - Process - Inputs - Logging - Tools - Sumologic": "",
	"CD - Monitoring - Process - Inputs - Logging - Tools - Scalyr": "",
	"CD - Monitoring - Process - Outputs - Dashboards": "",
	"CD - Monitoring - Process - Outputs - Metrics": "Instrument a service to gather statistics about individual operations. Aggregate metrics in centralized metrics service, which provides reporting and alerting. There are two models for aggregating metrics: push - the service pushes metrics to the metrics service pull - the metrics services pulls metrics from the service",
	"CD - Monitoring - Process - Outputs - Alerting": "",
	"CD - Monitoring - Process - Outputs - Alerting - VictoOps": "",
	"CD - Monitoring - Process - Outputs - Alerting - PagerDuty": "",
	"CD - Monitoring - Process - Outputs - Alerting - OpsGene": "",
	"CD - Monitoring - Indicators - Performance": "",
	"CD - Monitoring - Indicators - Latency": "",
	"CD - Monitoring - Indicators - Errors": "",
	"CD - Monitoring - Indicators - Traffic": "",
	"CD - Monitoring - Indicators - Saturation": "",
	"CD - Monitoring - Targets - UserFeedback": "Gather early feedback from real users",
	"CD - Monitoring - Targets - System - HealthCheckAPI": "A service has an health check API endpoint (e.g. HTTP /health) that returns the health of the service. The API endpoint handler performs various checks, such as: the status of the connections to the infrastructure services used by the service instance, the status of the host, e.g. disk space, application specific logic A health check client - a monitoring service, service registry or load balancer - periodically invokes the endpoint to check the health of the service instance.",
	"CD - Monitoring - Targets - Database - Metrics - QueryPerformance": "Measure execution time and use EXPLAIN plans to optimize queries.",
	"CD - Monitoring - Targets - Database - Metrics - ResponseTime": "Track round-trip time for queries, aiming for low latency.",
	"CD - Monitoring - Targets - Database - Metrics - Throughput": "Monitor how many queries the database handles per second/minute.",
	"CD - Monitoring - Targets - Database - Metrics - DatabaseConnections": "Monitor the number of active connections and optimize connection pooling.",
	"CD - Monitoring - Targets - Database - Metrics - DiskI/O": "Measure read/write speeds, queue length, and disk throughput.",
	"CD - Monitoring - Targets - Database - Metrics - CPUUsage": "Track CPU utilization to ensure the database is not overburdened.",
	"CD - Monitoring - Targets - Database - Metrics - MemoryUsage": "Monitor memory consumption to avoid excessive usage leading to slowdowns.",
	"CD - Monitoring - Targets - Database - Metrics - LockContention": "Track lock conflicts and deadlocks to avoid delays.",
	"CD - Monitoring - Targets - Database - Metrics - CacheHitRatio": "Monitor cache hit ratios to ensure frequently accessed data is cached.",
	"CD - Monitoring - Targets - Database - Metrics - NetworkLatency": "Measure round-trip time for data transfer between the application and database.",
	"CD - Monitoring - Targets - Database - Metrics - SlowQueryLogs": "Capture and analyze slow queries for optimization.",
	"CD - Monitoring - Targets - Database - Metrics - IndexOptimization": "Ensure efficient indexing and monitor index fragmentation.",
	"CD - Monitoring - Targets - Database - Metrics - QueryExecutionPlan:": "Mentioned briefly but should include advice on using query profiling tools like EXPLAIN in SQL databases.",
	"CD - Monitoring - Targets - Database - Metrics - DatabaseSchemaDesign": "Optimizing schema design impacts performance and should be addressed.",
	"CD - Monitoring - Tools - Prometheus": "Prometheus is an open-source toolkit for monitoring and alerting based on an embedded times-series database, a query DSL and various mechanics for scraping metrics data off endpoints.",
	"CD - Monitoring - Tools - Graphana": "A visualization tool used for creating dashboards to visualize metrics collected by Prometheus. This enables real-time monitoring and analytics.",
	"CD - Monitoring - Tools - ELKStack": ".",
	"CD - Monitoring - Tools - ELKStack 0": "https://www.linkedin.com/posts/rakesh-perala-95a643321_eks-cluster-application-with-ci-cd-jenkins-activity-7322798006242582528-9Znj/?utm_source=share&utm_medium=member_desktop&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"CD - Monitoring - Tools - ELKStack 1": "https://www.linkedin.com/posts/subhasmita-das-a582b4171-devops_eks-cluster-application-with-cicd-jenkins-activity-7322562305395675137-l7Zc/?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"CD - Monitoring - Tools - ELKStack - ElasticSearch": "A search engine that allows for storage, search, and analysis of large volumes of data quickly. It's often used to index logs for faster query performance.",
	"CD - Monitoring - Tools - ELKStack - LogStash": "Part of the ELK stack (Elasticsearch, Logstash, Kibana). It ingests and processes logs from various sources, prepares them for storage and analysis.",
	"CD - Monitoring - Tools - ELKStack - Kibana": "A visualization tool that works with Elasticsearch. It provides an interface for examining data stored in Elasticsearch, allowing users to create visual representations of log data.",
	"CD - Monitoring - Tools - Datadog": ".",
	"CD - Monitoring - Tools - Splunk": ".",
	"CD - Monitoring - Tools - Nagios": ".",
	"CD - Monitoring - Tools - Zabbix": ".",
	"CD - Monitoring - Tools - RapidAPI": ".",
	"CD - Monitoring - Tools - Moesif": ".",
	"CD - Monitoring - Tools - SignalFX": "",
	"CD - Monitoring - Tools - ExtraHop": "",

	"CD - Observability": "SECTION",
	"CD - Observability 2": "https://www.linkedin.com/posts/prashant-mahamuni-192aa5224_auto-scaling-with-cloudwatch-launch-templates-activity-7325549565351247872-DCtt/?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"CD - Observability 4": "https://www.linkedin.com/posts/umar-shahzad-b3b554286_splunk-for-devops-engineers-activity-7326860402389086208-q0We?utm_source=share&utm_medium=member_desktop&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"CD - Observability 6": "https://www.linkedin.com/posts/bhumikakr258_splunkknowledgeobjects-splunktips-searchwisdom-activity-7329147116885299201-NV18?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"CD - Observability 7": "https://www.linkedin.com/posts/bhumikakr258_splunk-datamodels-searchacceleration-activity-7329522095283949568-gae8/?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"CD - Observability 8": "https://www.linkedin.com/posts/balasubramani-s-mba-in-information-security-a7541b16_dlp-cybersecurity-dataprotection-activity-7329693852007653378-zKsp/?utm_source=share&utm_medium=member_android&rcm=ACoAAABC9LwBrHjPW40o31rZRtAXH6eii8ctLzQ",
	"CD - Observability 9": "",
	"CD - Observability10": "",
	"CD - Observability11": "",
	"CD - Observability12": "",
	"CD - Observability13": "",
	"CD - Observability14": "",
	"CD - Observability15": "",
	"CD - Observability16": "",
	"CD - Observability17": "",
	"CD - Observability18": "",
	"CD - Observability19": "",
	"CD - Observability - Features - Purpose": "Observability is the ability to understand a system’s internal state by examining its outputs (logs, metrics, traces) and asking arbitrary questions about its behavior.",
	"CD - Observability - Features - Approach": "Proactive (allows exploration of system behavior without predefined queries).",
	"CD - Observability - Features - Usage": "Best for complex, dynamic systems (e.g., microservices, cloud-native apps).",
	"CD - Observability - Process - Inputs - Logging - Scope - CentralizedLogging - Aggregation": "Use a centralized logging service that aggregates logs from each service instance. The users can search and analyze the logs. They can configure alerts that are triggered when certain messages appear in the logs.",
	"CD - Observability - Process - Inputs - Logging - Scope - CentralizedLogging": "Aggregates logs from multiple services into a single system for analysis.",
	"CD - Observability - Process - Inputs - Logging - Scope - CentralizedLogging - Process - Log": "Applications emit logs (text-based records of events).",
	"CD - Observability - Process - Inputs - Logging - Scope - CentralizedLogging - Process - Collection": "Logs are collected, indexed, and stored in a central system (e.g., ELK Stack, Splunk, Datadog).",
	"CD - Observability - Process - Inputs - Logging - Scope - CentralizedLogging - Process - Querying": "Engineers query logs to find errors or patterns.",
	"CD - Observability - Process - Inputs - Logging - Scope - CentralizedLogging - Tools - ELKStack": "",
	"CD - Observability - Process - Inputs - Logging - Scope - CentralizedLogging - Tools - Fluentd+Loki+Grafana": "",
	"CD - Observability - Process - Inputs - Logging - Scope - CentralizedLogging - Tools - AWSCloudWatchLogs": "",
	"CD - Observability - Process - Inputs - Logging - Scope - CentralizedLogging - Tools - Splunk": "",
	"CD - Observability - Process - Inputs - Tracing": "",
	"CD - Observability - Process - Inputs - Tracing - Features - Purpose": "Tracks request flow across services",
	"CD - Observability - Process - Inputs - Tracing - Features - Scope": "Distributed system (end-to-end).",
	"CD - Observability - Process - Inputs - Tracing - Features - Data": "Structured (e.g., span IDs, parent-child context)",
	"CD - Observability - Process - Inputs - Tracing - Features - Granularity": "Lower (focused on latency/dependencies).",
	"CD - Observability - Process - Inputs - Tracing - Features - UseCase": "Diagnosing latency, bottlenecks.",
	"CD - Observability - Process - Inputs - Tracing - Distributed": "Instrument services with code that: Assigns each external request a unique external request id. Passes the external request id to all services that are involved in handling the request. Includes the external request id in all log messages. Records information (e.g. start time, end time) about the requests and operations performed when handling a external request in a centralized service. This instrumentation might be part of the functionality provided by a Microservice Chassis framework.  - Tracks requests across multiple services in a microservices architecture. - Useful for troubleshooting and monitoring service interactions.",
	"CD - Observability - Process - Inputs - DistributedTracing": "Tracks a single request’s journey across multiple microservices.",
	"CD - Observability - Process - Inputs - DistributedTracing - Process - ID": "Each request gets a unique trace ID as it enters the system.",
	"CD - Observability - Process - Inputs - DistributedTracing - Process - Record": "As the request moves through services, spans (timed operations) are recorded.",
	"CD - Observability - Process - Inputs - DistributedTracing - Process - Trace": "A trace is the full journey (e.g., API Gateway → Auth Service → Order Service → Payment Service).",
	"CD - Observability - Process - Inputs - DistributedTracing - Tools - Jaeger": "",
	"CD - Observability - Process - Inputs - DistributedTracing - Tools - Zipkin": "",
	"CD - Observability - Process - Inputs - DistributedTracing - Tools - Honeycomb": "",
	"CD - Observability - Process - Inputs - DistributedTracing - Tools - AWS X-Ray": "",
	"CD - Observability - Process - Inputs - DistributedTracing - Tools - OpenTelemetry": "",
	"CD - Observability - Process - Inputs - DistributedTracing - Tools - SpringCloudSleuth": "Spring Cloud Sleuth provides Spring Boot auto-configuration for distributed tracing. Spring Cloud Sleuth will not work with Spring Boot 3.x onward. The last major version of Spring Boot that Sleuth will support is 2.x."

}