{
  "Security": "SECTION",

  "Web": "SECTION",
  "Web - CORS": "https://javascript.plainenglish.io/cors-the-friendly-gatekeeper-of-the-web-and-how-to-fix-it-650e33179d24",
  "Web - XSS": "https://javascript.plainenglish.io/how-to-secure-your-frontend-in-2024-with-code-best-practices-for-modern-web-development-dc60921bb93a",
  "Web - JWT": "",
  "Web - JWE": "",
  "Web - JWKS": "",
  "Web - OIDC": "",
  "Web - CAS": "",

  "Cryptography": "SECTION",
  "Cryptography - Goals": "The field of cryptography provides its users with a method for:",
  "Cryptography - Goals - Sending": "sending messages that only the intended receiver of the message will understand",
  "Cryptography - Goals - Hiding": "preventing unauthorized third parties from reading them in case of interception",
  "Cryptography - Goals - Veryfing": "verifying the authenticity and integrity of digital messages from a known sender",
	"Cryptography - Keys": "",
  "Cryptography - Keys - Types - Private": "",
  "Cryptography - Keys - Types - Private  - SeedPhrase": "",
  "Cryptography - Keys - Types - Public": "",
	"Cryptography - Keys - Generation": "",
  "Cryptography - Keys - Generation - Splitting": "",
  "Cryptography - Keys - Generation - Splitting - GoldfeverMPC": "",
  "Cryptography - Keys - Generation - Splitting - LindellMPC": "",
  "Cryptography - Keys - Generation - Splitting - DGC": "",
  "Cryptography - Keys - Generation - Splitting - MPC-CMP": "",
  "Cryptography - Keys - KEM": "A Key Encapsulation Mechanism (KEM) is a cryptographic technique used in encryption systems to securely transmit symmetric encryption keys over an insecure channel. It is especially important in public-key encryption schemes.",
  "Cryptography - Keys - KEM - steps": ".",
  "Cryptography - Keys - KEM - steps - KeyGeneration": "The receiver generates a public-private key pair.",
  "Cryptography - Keys - KEM - steps - Encapsulation": "The sender uses the receiverâ€™s public key to generate a random symmetric key and encrypt it.",
  "Cryptography - Keys - KEM - steps - Transmission": "The encrypted symmetric key (ciphertext) is sent to the receiver.",
  "Cryptography - Keys - KEM - steps - Decapsulation": "The receiver uses their private key to decrypt the ciphertext and retrieve the symmetric key.",
  "Cryptography - Keys - KEM - steps - SecureCommunication": "The symmetric key is then used for fast and efficient encryption (e.g., AES) to exchange data securely.",
  "Cryptography - Keys - KEM - Impl - Classical - RSA-KEM": "Uses RSA encryption to encapsulate a symmetric key.",
  "Cryptography - Keys - KEM - Impl - Classical - ECIES": "Elliptic Curve Integrated Encryption Scheme (ECIES): Uses elliptic curve cryptography for key exchange.",
  "Cryptography - Keys - KEM - Impl - PostQuantum": ".",
  "Cryptography - Keys - KEM - Impl - PostQuantum - Kyber": "Kyber: A post-quantum KEM candidate for secure key exchange.",
  "Cryptography - Keys - KEM - Impl - PostQuantum - Kyber - how": ".",
  "Cryptography - Keys - KEM - Impl - PostQuantum - Kyber - how - KeyGeneration": "A user generates a public key and a private key using Kyber's key generation algorithm.",
  "Cryptography - Keys - KEM - Impl - PostQuantum - Kyber - how - Encapsulation": "Another user uses the public key to encapsulate a shared secret (symmetric key) into a ciphertext.",
  "Cryptography - Keys - KEM - Impl - PostQuantum - Kyber - how - Decapsulation": "The recipient uses their private key to decapsulate the ciphertext and recover the shared secret.",
  "Cryptography - Keys - KEM - Impl - PostQuantum - NTRU": ".",
  "Cryptography - Keys - KEM - Impl - PostQuantum - Saber": ".",
  "Cryptography - Keys - KMS": "System or framework used to manage cryptographic keys throughout their lifecycle.",
  "Cryptography - Keys - KMS - Functions": ".",
  "Cryptography - Keys - KMS - Functions - KeyGeneration": "Creates cryptographic keys securely.",
  "Cryptography - Keys - KMS - Functions - KeyStorage": "Safely stores keys, often in hardware security modules (HSMs) or encrypted databases.",
  "Cryptography - Keys - KMS - Functions - KeyDistribution": "Distributes keys to authorized entities.",
  "Cryptography - Keys - KMS - Functions - KeyRotation": "Periodically replaces keys to limit exposure.",
  "Cryptography - Keys - KMS - Functions - KeyRevocation": "Invalidates compromised or outdated keys.",
  "Cryptography - Keys - KMS - Functions - AccessControl": "Ensures only authorized users or systems can access keys.",
  "Cryptography - Keys - KMS - Tools - AWS KMS": "AWS KMS",
  "Cryptography - Keys - KMS - Tools - GoogleCloudKMS": "Google Cloud KMS",
  "Cryptography - Keys - KMS - Tools - AzureKeyVault": "Azure Key Vault",
  "Cryptography - Applications - Signatures - Generating": "",
  "Cryptography - Applications - Signatures - Generating - SingleKey": "",
  "Cryptography - Applications - Signatures - Generating - MultiSig": "",
  "Cryptography - Applications - Signatures - Generating - TSS": "",
  "Cryptography - Applications - Signatures - Signing": "",
  "Cryptography - Applications - Signatures - Signing - Access": "",
  "Cryptography - Applications - Signatures - Signing - Transactions": "",
  "Cryptography - Applications - Signatures - Manipulation": "",
  "Cryptography - Applications - Signatures - Manipulation - Compression": "",
  "Cryptography - Applications - Signatures - Manipulation - Encryption": "",
  "Cryptography - Applications - Signatures - Manipulation - Encryption - Symmetric": "",
  "Cryptography - Applications - Signatures - Manipulation - Encryption - Asymmetric": "",
  "Cryptography - Applications - Signatures - Manipulation - Encryption - HashFunction": "",
  "Cryptography - Applications - Signatures - Manipulation - Encryption - Homomorphic": "",
  "Cryptography - Applications - Signatures - Manipulation - AES": "",
  "Cryptography - Applications - Signatures - Manipulation - Commitment": "",
  "Cryptography - Applications - Signatures - Manipulation - Hashing": "",
  "Cryptography - Applications - Signatures - Manipulation - Hashing - MD5": "",
  "Cryptography - Applications - Signatures - Computation": "",
  "Cryptography - Applications - Signatures - Computation - MPC": "",
  "Cryptography - Applications - Signatures - Computation - MPC - ShamirSecretScheme": "",
  "Cryptography - Applications - Signatures - Verification": "",
  "Cryptography - Applications - Signatures - Verification - Fraud": "",
  "Cryptography - Applications - Signatures - Verification - Validity": "",
  "Cryptography - Applications - Signatures - Verification - Validity - zkProofs": "",
  "Cryptography - Applications - Signatures - Verification - Validity - Zk-SNARKs": "",
  "Cryptography - Applications - Signatures - Verification - Validity - Zk-STARKs": "",
  "Cryptography - Applications - Signatures - Verification - Validity - ZkStack": "",
  "Cryptography - Applications - Signatures - Verification - Pessimistic": "",
	"Cryptography - Applications - Signatures": "",
  "Cryptography - Applications - Signatures - Digital": "",
  "Cryptography - Applications - Signatures - Digital - Schemes - ECC": "",
  "Cryptography - Applications - Signatures - Digital - Schemes - BLS": "BLS stands for Boneh-Lynn-Shacham, which is a digital signature scheme based on pairing-based cryptography. BLS signatures are known for their short signature size, efficiency, and unique properties that make them suitable for advanced cryptographic applications, such as aggregation and threshold signatures.",
  "Cryptography - Applications - Signatures - Digital - Schemes - DSA": "Digital Signature Algorithm",
  "Cryptography - Applications - Signatures - Digital - Schemes - RSA": "Rivest-Shamir-Adleman",
  "Cryptography - Applications - Signatures - Digital - Schemes - ECSA": "ECSA stands for Elliptic Curve Signature Algorithm. It is a digital signature scheme based on elliptic curve cryptography (ECC). ECSA is widely used for creating and verifying digital signatures, providing a secure and efficient way to ensure data integrity, authenticity, and non-repudiation. ECSA is an adaptation of the Digital Signature Algorithm (DSA) but uses elliptic curve cryptography instead of traditional modular arithmetic. It leverages the mathematical properties of elliptic curves to provide strong security with smaller key sizes compared to RSA or classical DSA.",
	"Cryptography - Applications - PKI": "PKI is a comprehensive framework that enables the use of public-key cryptography for secure communication, authentication, and data integrity.",
	"Cryptography - Applications - PKI - Components": "",
	"Cryptography - Applications - PKI - Components - CA": "Certificate Authority (CA): A trusted entity that issues and verifies digital certificates.",
	"Cryptography - Applications - PKI - Components - DigitalCertificates": "Digital Certificates: Bind a public key to an entity (e.g., a person, organization, or device).",
	"Cryptography - Applications - PKI - Components - RA": "Registration Authority (RA): Verifies the identity of entities requesting certificates.",
	"Cryptography - Applications - PKI - Components - CRL": "Certificate Revocation List (CRL): A list of revoked certificates that are no longer valid.",
	"Cryptography - Applications - PKI - Components - Public/PrivateKeyPairs:": "Public/Private Key Pairs: Used for encryption, decryption, and digital signatures.",
	"Cryptography - Applications - PKI - Functions - Authentication": "Verifies the identity of entities.",
	"Cryptography - Applications - PKI - Functions - Encryption": "Secures data using public-key cryptography.",
	"Cryptography - Applications - PKI - Functions - DigitalSignatures": "Ensures data integrity and non-repudiation.",
	"Cryptography - Applications - PKI - Functions - KeyManagement": "Manages the lifecycle of cryptographic keys and certificates.",
  "Cryptography - Applications - PKI - Certificates": "",
  "Cryptography - Applications - PKI - Certificates - X509Certificate": "",
  "Cryptography - Applications - Structures - Identifiers": "",
  "Cryptography - Applications - Structures - Identifiers - Formats - OIDs": "An OID is a globally unique identifier used to name objects, concepts, or entities in various systems, including cryptography, telecommunications, and IT. OIDs are structured as a hierarchical sequence of numbers, where each number represents a node in the hierarchy.",
  "Cryptography - Applications - Structures - Identifiers - Formats - OIDs - Purpose": "Identifies objects, algorithms, or concepts.",
  "Cryptography - Applications - Structures - Data - Formats - ASN.1": "ASN.1 is a standard interface description language (IDL) for defining data structures that can be serialized and deserialized in a cross-platform way.",
  "Cryptography - Applications - Structures - Data - Formats - DER": "DER (Distinguished Encoding Rules) DER is a binary encoding format used to represent data structures in a standardized way. It is a subset of ASN.1 (Abstract Syntax Notation One), a language for defining data structures. DER ensures that the encoded data is unambiguous and can be parsed consistently across different systems.",
  "Cryptography - Applications - Structures - Data - Formats - DER - Purpose": "Encodes data structures in a binary format.",
  "Cryptography - Applications - Structures - Data - Formats - DER - Uses": ".",
  "Cryptography - Applications - Structures - Data - Formats - DER - Uses - DigitalCertificates": "X.509 certificates are often encoded in DER format.",
  "Cryptography - Applications - Structures - Data - Formats - DER - Uses - CryptographicKeys": "RSA, ECC, and other keys are encoded in DER.",
  "Cryptography - Applications - Structures - Data - Formats - DER - Uses - PKCSStandards": "DER is used in PKCS#7 (CMS), PKCS#10 (Certificate Signing Requests), and other PKCS standards.",
  "Cryptography - Applications - Structures - Data - Formats - DER - Uses - ASN.1 Data Structures": "Any ASN.1-defined data structure can be encoded in DER.",
	"Cryptography - Applications - Structures - MerkleTree": "",
  "Cryptography - Applications - Structures - VerkleTree": "",
  "Cryptography - Applications - Structures - PatriciaTree": "",
  "Cryptography - Applications - Structures - MerkelPatriciaTree": "",

	"Quantum": "",
  "Quantum - Falcom": "",
  "Quantum - Dilithium": "",
  "Quantum - VPU- ": ""

}

