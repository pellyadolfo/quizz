{
	"Browser": "SECTION",

	"View - Rendering": "SECTION",
	"View - Rendering - DOM": "The DOM is not part of the JavaScript language, but is instead a Web API which defines the structure and properties of elements on a webpage.",
	"View - Rendering - DOM - access": ".",
	"View - Rendering - DOM - access - minimize": "Accessing and manipulating the DOM can be slow. Minimize the amount of DOM access by caching references to elements and avoiding unnecessary changes.",
	"View - Rendering - DOM - access - batch": "Batch DOM Updates: Group multiple DOM updates together to reduce the number of reflows and repaints.",
	"View - Rendering - Markup - DocumentFragment": "https://javascript.plainenglish.io/stop-using-innerhtml-heres-the-secret-technique-netflix-engineers-use-for-dom-manipulation-5a53df44ba9e",
	"View - Rendering - Markup - DocumentFragment2": "https://xiuerold.medium.com/10-essential-javascript-optimization-techniques-for-lightning-fast-websites-f51cf5fd1df8",
	"View - Rendering - Markup - template": "The <template> tag allows you to define HTML content that isn’t rendered when the page loads. This content is stored in memory until it’s needed, making it perfect for scenarios where you want to prepare content but not display it immediately.",
  "View - Rendering - Markup - progress": ".",
  "View - Rendering - Markup - meter": ".",
  "View - Rendering - Markup - dfn": ".",
  "View - Rendering - Markup - dialog": ".",
  "View - Rendering - Markup - map": ".",
  "View - Rendering - Markup - area": ".",
  "View - Rendering - Markup - bdo": ".",
  "View - Rendering - Markup - base": ".",
  "View - Rendering - Markup - time": ".",
  "View - Rendering - Markup - hgroup": ".",
  "View - Rendering - Markup - kbd": ".",
  "View - Rendering - Markup - cite": ".",
	"View - Styling - CSS - ComponentBased": "Component-based CSS frameworks like Bootstrap provide pre-styled components (buttons, navbars, forms, etc.) that developers can use to quickly build a cohesive UI. This approach focuses on reusable, standardized components that help maintain consistency across a project.",
  "View - Styling - CSS - ComponentBased - Properties": "",
  "View - Styling - CSS - ComponentBased - Nesting": "",
  "View - Styling - CSS - ComponentBased - Modules": "",
	"View - Styling - CSS - ComponentBased - Bootstrap": "",
	"View - Styling - CSS - UtilityFirst": "Utility-first is a CSS methodology where you build up your styles using many small, purpose-specific classes.",
	"View - Styling - CSS - UtilityFirst -SOC": "Many critics consider Tailwind's utility-first approach an anti-pattern because it goes against the separation of concerns principle. Traditionally, HTML is for structure, CSS is for styling, and JavaScript is for behavior. Tailwind blends structure and styling, potentially leading to more tightly coupled code.",
	"View - Styling - CSS - UtilityFirst - TailwindCSS": "",
  "View - Styling - CSS - UtilityFirst - TailwindCSS - Signals": "Tailwind Signals is a new experimental feature in Tailwind CSS that enables custom state consumption by any descendant in the DOM for cleaner coding and efficient styling. Signals build on the concept of pseudo-classes and allow for bidirectional communication between parent and child components, enabling child components to react to state changes in their parents and vice versa.",
	"View - Styling - CSS - UtilityFirst - UnoCSS": "",
	"View - Styling - CSS - Preprocessors": "",
	"View - Styling - CSS - Preprocessors - SASS": "Syntactically Awesome Style Sheets",
	"View - Styling - CSS - Preprocessors - LESS": "Leaner Style Sheets",
	"View - Styling - CSS - Preprocessors - Stylus": "",
	"View - Styling - CSS - Preprocessors - Stylable": "",
	"View - Styling - CSS - Preprocessors - Stylis": "",
	"View - Styling - CSS - Preprocessors - Clay": "",
	"View - Styling - CSS - Preprocessors - Crush": "",
  "View - Styling - CSS - CSS-in-JS": "As the name suggests, CSS-in-JS allows programmers to style their components by writing CSS directly in their JavaScript or TypeScript code. ",
  "View - Styling - CSS - CSS-in-JS - advantages - scope": "All CSS-in-JS libraries generate unique CSS class names. Moreover, all styles are scoped to their respective component, providing encapsulation without affecting any styling defined outside the component. This eloquently avoids CSS class name collisions, specificity wars, and spending a lot of time to come up with unique class names across the entire application. Using CSS-in-JS scopes your styles to your components (no more accidental global styles!)",
  "View - Styling - CSS - CSS-in-JS - advantages - SSR": "",
  "View - Styling - CSS - CSS-in-JS - advantages - prefixes": "Automatic vendor prefixes: All CSS-in-JS libraries provide vendor prefixes out-of-the-box. This is a great time saver because developers do not have to figure out which features require a vendor prefix in older browsers.",
  "View - Styling - CSS - CSS-in-JS - drawbacks - overhead": "As components render, the CSS-in-JS library must convert styles into plain CSS to be inserted into the document.",
  "View - Styling - CSS - CSS-in-JS - drawbacks - size": "Every user who uses your application has to download the JavaScript for the CSS-in-JS library.",
  "View - Styling - CSS - CSS-in-JS - constants": "",
  "View - Styling - CSS - CSS-in-JS - constants - syntax - param": "style={{ backgroundColor: isHovered ? 'yellow' : 'lightgray', }}",
  "View - Styling - CSS - CSS-in-JS - constants - syntax - class": "<div style={styles}>",
  "View - Styling - CSS - CSS-in-JS - libs - fwSpecific": "only work with a specific JavaScript framework",
  "View - Styling - CSS - CSS-in-JS - libs - fwSpecific - Radium": "",
  "View - Styling - CSS - CSS-in-JS - libs - fwSpecific - StyledJSX": "Styled JSX uses template literals within the JSX syntax to add CSS styles to components.",
  "View - Styling - CSS - CSS-in-JS - libs - fwAgnostic": "you can use them with any component-based framework or even plain JavaScript",
  "View - Styling - CSS - CSS-in-JS - libs - fwAgnostic - StyledComponents": "Styled Components is a library for React and React Native that allows you to use component-level styles in your application. It leverages tagged template literals to style your components, providing a seamless integration of styles within your JavaScript.",
  "View - Styling - CSS - CSS-in-JS - libs - fwAgnostic - Emotion": "",
  "View - Styling - CSS - CSS-in-JS - libs - fwAgnostic - StyleX": "",
  "View - Styling - CSS - CSS-in-JS - libs - fwAgnostic - PandaCSS": "",
  "View - Styling - CSS - CSS-in-JS - libs - fwAgnostic - PigmentCSS": "",
  "View - Styling - CSS - CSS-in-JS - libs - fwAgnostic - KumaUI": "",
  "View - Styling - CSS - CSS-in-JS - libs - fwAgnostic - ParcelMacros": "",
  "View - Styling - CSS - CSS-in-JS - libs - compileTime - Linaria": "",
  "View - Styling - CSS - CSS-in-JS - libs - compileTime - CVA": "",
  "View - Styling - CSS - CSS-in-JS - libs - compileTime - astroturf": "",
  "View - Styling - CSS - CSS-in-JS - libs - compileTime - compiled": "",
	"View - Styling - Components - libs - Styled": "UI library which gives you access to lots of pre-built components which share the same design system, functionalities, and rules for accessibility",
  "View - Styling - Components - libs - Styled - MaterialUI": "",
  "View - Styling - Components - libs - Styled - MantineUI": "",
  "View - Styling - Components - libs - Styled - NGBootstrap": "",
  "View - Styling - Components - libs - Styled - NGXBootstrap": "",
  "View - Styling - Components - libs - Styled - OnSetUI": "",
  "View - Styling - Components - libs - Styled - Syncfusion": "",
  "View - Styling - Components - libs - Styled - VaddinUI": "",
  "View - Styling - Components - libs - Styled - KendoUI": "",
  "View - Styling - Components - libs - Styled - IgniteUI": "",
  "View - Styling - Components - libs - Styled - Devextreme": "",
  "View - Styling - Components - libs - Styled - Ng-zorro": "",
  "View - Styling - Components - libs - Styled - Nebular": "",
  "View - Styling - Components - libs - Styled - Clarity": "",
  "View - Styling - Components - libs - Styled - ChakraUI": "",
  "View - Styling - Components - libs - Styled - NextUI": "https://levelup.gitconnected.com/speed-up-next-js-development-with-nextui-27afcf983235",
  "View - Styling - Components - libs - Styled - ParkUI": "",
  "View - Styling - Components - libs - Styled - ReactBootstrap": "",
  "View - Styling - Components - libs - Styled - SemanticUI": "",
  "View - Styling - Components - libs - Styled - Reactstrap": "",
  "View - Styling - Components - libs - Styled - AntDesign": "",
  "View - Styling - Components - libs - Headless": "The trend moves towards headless UI libraries though. They come without styling, but with all the functionalities and accessibilities that a modern component library needs. Most of the time they are combined with a Utility-First-CSS solution like Tailwind",
  "View - Styling - Components - libs - Headless - ShadcnUI": "shadcn/UI is the first popular UI library which fully embraces Tailwind as first-class citizen (next to CSS Variables) for theming their components to achieve custom design. Following Tailwind in its footsteps, shadcn/UI is not installed as a node package, but rather copy and pasted into a project where one can freely adapt the components. https://levelup.gitconnected.com/using-5-new-shadcn-ui-components-in-next-js-14-8f4bc33d2911",
  "View - Styling - Components - libs - Headless - Radix": "",
  "View - Styling - Components - libs - Headless - ReactAria": "",
  "View - Styling - Components - libs - Headless - Catalyst": "",
  "View - Styling - Components - libs - Headless - DaisyUI": "",
  "View - Styling - Components - libs - Headless - HeadlessUI": "",
  "View - Styling - Components - libs - Headless - TailwindUI": "",
  "View - Styling - Components - libs - Headless - Primefaces": "",
  "View - Styling - Components - libs - Headless - Primefaces - PrimeNG": "",
  "View - Styling - Patterns - Relativistic - MouldableUI": "Mouldable UI is a design paradigm that emphasizes creating user interfaces capable of adapting to various contexts and user needs. https://levelup.gitconnected.com/from-atomic-design-to-relativistic-interfaces-0751b0b46832",
	"View - Animations - requestAnimationFrame": "Instead of using setTimeout or setInterval for animations, use requestAnimationFrame. This method synchronizes your animations with the browser’s refresh rate, resulting in smoother animations.",
	"View - Animations - transitions - ViewTransitionsAPI": "The View Transitions API can be used in two scenarios: Single Page Applications (SPAs) and Multi-Page Applications (MPAs).",
	"View - Animations - transitions - startViewTransition": "The startViewTransition() method of the Document interface starts a new same-document (SPA) view transition and returns a ViewTransition object to represent it.",


	"Logic - Events - browser - click": "",
	"Logic - Events - browser - dblclick": "",
	"Logic - Events - browser - mousedown": "",
	"Logic - Events - browser - mouseup": "",
	"Logic - Events - browser - mouseover": "",
	"Logic - Events - browser - mouseout": "",
	"Logic - Events - browser - keydown": "",
	"Logic - Events - browser - keyup": "",
	"Logic - Events - browser - keypress": "",
	"Logic - Events - browser - touchstart": "",
	"Logic - Events - browser - touchmove": "",
	"Logic - Events - browser - touchend": "",
	"Logic - Events - browser - submit": "",
	"Logic - Events - browser - change": "",
	"Logic - Events - browser - input": "",
	"Logic - Events - browser - load": "",
	"Logic - Events - browser - scroll": "",
	"Logic - Events - browser - resize": "",
	"Logic - Events - browser - beforeunload": "",
	"Logic - Events - browser - focus": "",
	"Logic - Events - browser - blur": "",
	"Logic - Events - browser - dragstart": "",
	"Logic - Events - browser - dragover": "",
	"Logic - Events - browser - drop": "",
	"Logic - Events - browser - animationstart": "",
	"Logic - Events - browser - animationend": "",
	"Logic - Events - browser - transitionend": "",
	"Logic - Devices - Connection": "navigator.connection",
	"Logic - Devices - Connection - speed": "navigator.connection.downlink",
	"Logic - Devices - Bluetooth": "navigator.bluetooth",
	"Logic - Devices - Camera": "navigator.mediaDevices",
	"Logic - Devices - Vibration": "navigator.vibrate",
	"Logic - Devices - Geolocation": "navigator.geolocation",
	"Logic - Devices - Battery": "navigator.getBattery()",
	"Logic - Devices - NFC": "new NFCReader()",
	"Logic - Devices - Payments": "new PaymentRequest(...)",
	"Logic - Devices - Share": "navigator.share",
	"Logic - Devices - Clipboard": "navigator.clipboard",
	"Logic - Devices - Orientation": "window.addListener('deviceorientation, handleOrientationFunction)"

}