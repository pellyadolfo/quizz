{

  "Cryptography - Keys": "SECTION",
  "Cryptography - Keys - Compression": "",
  "Cryptography - Keys - Hashing": "",
  "Cryptography - Keys - Hashing - HashFunction": "",
  "Cryptography - Keys - Hashing - HashFunction - MD5": "",
  "Cryptography - Keys - Hashing - HashFunction - SHA-1": "",
  "Cryptography - Keys - Hashing - HashFunction - SHA-2": "",
  "Cryptography - Keys - Hashing - HashFunction - SHA-256": " SHA-256 is a cryptographic hash function used for data integrity and digital signatures. It takes an input (message) and produces a fixed-size hash value, typically 256 bits long. Its primary purpose is to verify the integrity of data and create a unique representation of a message.",
	"Cryptography - Keys - Hashing - Applications - Storage - Data - Formats - MerkleTrie": "A hash tree or Merkle tree is a tree in which every 'leaf' node is labelled with the cryptographic hash of a data block, and every node that is not a leaf (called a branch, inner node, or inode) is labelled with the cryptographic hash of the labels of its child nodes.",
	"Cryptography - Keys - Hashing - Applications - Storage - Data - Formats - RadixTrie": "A radix tree (also radix trie or compact prefix tree or compressed trie) is a data structure that represents a space-optimized trie (prefix tree) in which each node that is the only child is merged with its parent.",
  "Cryptography - Keys - Hashing - Applications - Storage - Data - Formats - PatriciaTrie": "A Patricia trie (the Practical Algorithm To Retrieve Information Coded in Alphanumeric) is a binary radix trie resulting from the application of the PATRICIA algorithm to alphnumeric data.",
  "Cryptography - Keys - Hashing - Applications - Storage - Data - Formats - MerkelPatriciaTrie": "Merkle Patricia Trie is a data structure that stores key-value pairs, just like a map. In additional to that, it also allows us to verify data integrity and the inclusion of a key-value pair.",
  "Cryptography - Keys - Hashing - Applications - Storage - Data - Formats - VerkleTrie": "Verkle Trees have a tree-like structure similar to Merkle Trees, but with a more efficient vector commitment scheme. Instead of hashing the d nodes, each node commits to the d nodes themselves using a vector commitment scheme.",
	"Cryptography - Keys - Encryption - Symmetric": "Symmetric encryption is a type of encryption key management solution where only one key (a secret key) is used to both encrypt and decrypt electronic data. In case of symmetric encryption, only public keys are used.",
  "Cryptography - Keys - Encryption - Symmetric - Operations - SingleKey - Encryption": "",
	"Cryptography - Keys - Encryption - Symmetric - Operations - SingleKey - Encryption - Algorithms": "",
  "Cryptography - Keys - Encryption - Symmetric - Operations - SingleKey - Encryption - Algorithms - AES": "AES is a symmetric-key encryption algorithm used for securing data. It’s primarily used for encrypting and decrypting data to maintain its confidentiality.",
  "Cryptography - Keys - Encryption - Asymmetric": "Asymmetric encryption, also known as public key encryption, uses a public key-private key pairing: data encrypted with the public key can only be decrypted with the private key.",
  "Cryptography - Keys - Encryption - Asymmetric - Key - Private": "This key is kept secret and is known only to the owner. It is used to decrypt data that has been encrypted with the corresponding public key or to create a digital signature.",
  "Cryptography - Keys - Encryption - Asymmetric - Key - Public": "This key is shared openly and can be distributed to anyone. It is used to encrypt data or to verify a digital signature.",
  "Cryptography - Keys - Encryption - Asymmetric - Features - slower": "Asymmetric encryption is generally slower than symmetric encryption (which uses the same key for both encryption and decryption) due to the complexity of the mathematical operations involved. Therefore, it is often used in combination with symmetric encryption, where asymmetric encryption is used to securely exchange the symmetric key, and symmetric encryption is used for the bulk of the data encryption.",
  "Cryptography - Keys - Encryption - Asymmetric - Operations - SingleKey - Encryption": "",
	"Cryptography - Keys - Encryption - Asymmetric - Operations - SingleKey - Encryption - Algorithms": "",
  "Cryptography - Keys - Encryption - Asymmetric - Operations - SingleKey - Encryption - Algorithms - RSA - 1977": "RSA algorithm, named after its inventors Rivest, Shamir, and Adleman. The RSA algorithm was developed in 1977 by Ron Rivest, Adi Shamir, and Leonard Adleman. It relies on the fact that factorization of large prime numbers requires significant computing power, and was the first algorithm to take advantage of the public key/private key paradigm. There are varying key lengths associated with RSA, with 2048-bit RSA key lengths being the standard for most websites today.",
  "Cryptography - Keys - Encryption - Asymmetric - Operations - SingleKey - Encryption - Algorithms - ECC": "Elliptic Curve Cryptography (ECC). ECC encryption is based on mathematical algorithms governing the algebraic structure of elliptic curves over finite fields. It provides equivalent levels of cryptographic strength as RSA and DSA, with shorter key lengths. ECC was the most recently-developed encryption method of the three, with Elliptic Curve Digital Signature Algorithm (ECDSA) becoming accredited in 1999, and Key Agreement and Key Transport Using Elliptic Curve Cryptography following in 2001. Like DSA, ECC is FIPS-certified, and is also endorsed by the National Security Agency (NSA).",
  "Cryptography - Keys - Encryption - Asymmetric - Operations - SingleKey - Encryption - Algorithms - ECC - ECDH": "Elliptic-curve Diffie–Hellman (ECDH) is a key agreement protocol that allows two parties, each having an elliptic-curve public–private key pair, to establish a shared secret over an insecure channel.",
  "Cryptography - Keys - Encryption - Asymmetric - Operations - SingleKey - Encryption - Algorithms - ECC - BrainpoolCurves": "",
  "Cryptography - Keys - Encryption - Asymmetric - Operations - SingleKey - Encryption - Algorithms - ElGamal": "The ElGamal encryption system is a public key encryption algorithm by Taher Elgamal [3] in 1985 that is based on the Diffie-Hellman key exchange.",
	"Cryptography - Keys - Encryption - Asymmetric - Operations - SingleKey - Encryption - Homomorphic": "Homomorphic encryption is a form of encryption that allows computations to be performed on encrypted data without first having to decrypt it.",
	"Cryptography - Keys - Encryption - Asymmetric - Operations - SingleKey - Encryption - Reencryption - Proxy": "Proxy re-encryption (PRE) schemes are cryptosystems which allow third parties (proxies) to alter a ciphertext which has been encrypted for one party, so that it may be decrypted by another.",
  "Cryptography - Keys - Encryption - Asymmetric - Operations - SingleKey - Verification": "",
  "Cryptography - Keys - Encryption - Asymmetric - Operations - SingleKey - Verification - Fraud": "",
  "Cryptography - Keys - Encryption - Asymmetric - Operations - SingleKey - Verification - Validity": "",
  "Cryptography - Keys - Encryption - Asymmetric - Operations - SingleKey - Verification - Validity - zkProofs": "The term ‘zero-knowledge’ was first cited in a research paper in 1985, and since then this has been used to define the interaction of zero-knowledge protocols used in real-world applications.",
  "Cryptography - Keys - Encryption - Asymmetric - Operations - SingleKey - Verification - Validity - parties": "",
  "Cryptography - Keys - Encryption - Asymmetric - Operations - SingleKey - Verification - Validity - parties - prover": "",
  "Cryptography - Keys - Encryption - Asymmetric - Operations - SingleKey - Verification - Validity - parties - verifier": "",
	"Cryptography - Keys - Encryption - Asymmetric - Operations - SingleKey - Verification - Validity - zkProofs - Types - Zk-SNARKs": "Short for Zero-Knowledge Succinct Non-Interactive Argument of Knowledge. ZK-SNARKs are an example of non-interactive proofs because the verifier and prover only communicate once.The zero-knowledge proofing system of ZK-SNARKs is quite small and with its constant time verification, it is known to be fast and cheap.",
  "Cryptography - Keys - Encryption - Asymmetric - Operations - SingleKey - Verification - Validity - zkProofs - Types - Zk-STARKs": "Like ZK-SNARKs, ZK-STARKs is an abbreviation and it’s short for Zero-Knowledge Scalable Transparent Argument of Knowledge. ZK-STARKs are much more scalable as the time spent on computations is quasilinear to the complexity of the underlying computation and transparent than ZK-SNARKs, as it relies on publicly verifiable randomness.Although both ZK-STARKs and ZK-SNARKs prove the validity of off-chain transactions without revealing underlying data, ZK-SNARKs is hailed as an improvement on ZK-STARKs despite it being more expensive to verify transactions on the Ethereum network due to its larger proof size.",
  "Cryptography - Keys - Encryption - Asymmetric - Operations - SingleKey - Verification - Validity - zkProofs - Types - ZkStack": "",
  "Cryptography - Keys - Encryption - Asymmetric - Operations - SingleKey - Verification - Pessimistic": "",
  "Cryptography - Keys - Encryption - Asymmetric - Operations - SplitKey": "",
	"Cryptography - Keys - Encryption - Asymmetric - Operations - SplitKey - Generation - DKG": "Distributed key generation (DKG) is a cryptographic process in which multiple parties contribute to the calculation of a shared public and private key set.",
  "Cryptography - Keys - Encryption - Asymmetric - Operations - SplitKey - Distribution - SSS": "Shamir's Secret Sharing Scheme is a way of splitting a secret value S into n “pieces” (or “shares”) in such a way that any combination of k pieces can be used to recover S , but any k−1 or fewer pieces provide no information about S .",
	"Cryptography - Keys - Encryption - Asymmetric - Operations - SplitKey - Computation - MPC": "Splits a single private key into multiple cryptographic shares, eliminating single points of failure entirely.",
	"Cryptography - Keys - Encryption - Asymmetric - Operations - SplitKey - Verification - VSS": "Verifiable Secret Sharing (VSS) was used as an extension of SSS to remedy this, and it adds a verification step before key reconstruction. However, the key is still stored as a whole after reconstruction so the risk of stealing the key remains.",
  "Cryptography - Keys - Encryption - Asymmetric - Operations - MultiKey - MultiKey": "",
  "Cryptography - Keys - Applications - Storage - DiskEncryption": "",
	"Cryptography - Keys - Applications - Connection - SSH": "A protocol for secure remote login and other secure network services.",
	"Cryptography - Keys - Applications - Transmission": "A Key Encapsulation Mechanism (KEM) is a cryptographic technique used in encryption systems to securely transmit symmetric encryption keys over an insecure channel. It is especially important in public-key encryption schemes.",
  "Cryptography - Keys - Applications - Transmission - KEM": ".",
  "Cryptography - Keys - Applications - Transmission - KEM - steps": ".",
  "Cryptography - Keys - Applications - Transmission - KEM - steps - KeyGeneration": "The receiver generates a public-private key pair.",
  "Cryptography - Keys - Applications - Transmission - KEM - steps - Encapsulation": "The sender uses the receiver’s public key to generate a random symmetric key and encrypt it.",
  "Cryptography - Keys - Applications - Transmission - KEM - steps - Transmission": "The encrypted symmetric key (ciphertext) is sent to the receiver.",
  "Cryptography - Keys - Applications - Transmission - KEM - steps - Decapsulation": "The receiver uses their private key to decrypt the ciphertext and retrieve the symmetric key.",
  "Cryptography - Keys - Applications - Transmission - KEM - steps - SecureCommunication": "The symmetric key is then used for fast and efficient encryption (e.g., AES) to exchange data securely.",
  "Cryptography - Keys - Applications - Transmission - KEM - Impl - Classical - RSA-KEM": "Uses RSA encryption to encapsulate a symmetric key.",
  "Cryptography - Keys - Applications - Transmission - KEM - Impl - Classical - ECIES": "Elliptic Curve Integrated Encryption Scheme (ECIES): Uses elliptic curve cryptography for key exchange.",
  "Cryptography - Keys - Applications - Transmission - KEM - Impl - PostQuantum": ".",
  "Cryptography - Keys - Applications - Transmission - KEM - Impl - PostQuantum - Kyber": "Kyber: A post-quantum KEM candidate for secure key exchange.",
  "Cryptography - Keys - Applications - Transmission - KEM - Impl - PostQuantum - Kyber - how": ".",
  "Cryptography - Keys - Applications - Transmission - KEM - Impl - PostQuantum - Kyber - how - KeyGeneration": "A user generates a public key and a private key using Kyber's key generation algorithm.",
  "Cryptography - Keys - Applications - Transmission - KEM - Impl - PostQuantum - Kyber - how - Encapsulation": "Another user uses the public key to encapsulate a shared secret (symmetric key) into a ciphertext.",
  "Cryptography - Keys - Applications - Transmission - KEM - Impl - PostQuantum - Kyber - how - Decapsulation": "The recipient uses their private key to decapsulate the ciphertext and recover the shared secret.",
  "Cryptography - Keys - Applications - Transmission - KEM - Impl - PostQuantum - NTRU": ".",
  "Cryptography - Keys - Applications - Transmission - KEM - Impl - PostQuantum - Saber": ".",
	"Cryptography - Keys - Management - KMS": "System or framework used to manage cryptographic keys throughout their lifecycle.",
  "Cryptography - Keys - Management - KMS - Functions": ".",
  "Cryptography - Keys - Management - KMS - Functions - KeyGeneration": "Creates cryptographic keys securely.",
  "Cryptography - Keys - Management - KMS - Functions - KeyStorage": "Safely stores keys, often in hardware security modules (HSMs) or encrypted databases.",
  "Cryptography - Keys - Management - KMS - Functions - KeyDistribution": "Distributes keys to authorized entities.",
  "Cryptography - Keys - Management - KMS - Functions - KeyRotation": "Periodically replaces keys to limit exposure.",
  "Cryptography - Keys - Management - KMS - Functions - KeyRevocation": "Invalidates compromised or outdated keys.",
  "Cryptography - Keys - Management - KMS - Functions - AccessControl": "Ensures only authorized users or systems can access keys.",
  "Cryptography - Keys - Management - KMS - Tools - AWS KMS": "AWS KMS",
  "Cryptography - Keys - Management - KMS - Tools - GoogleCloudKMS": "Google Cloud KMS",
  "Cryptography - Keys - Management - KMS - Tools - AzureKeyVault": "Azure Key Vault",

  "Cryptography - CommitmentScheme": "SECTION",
	"Cryptography - CommitmentScheme - desc": "Commitment Scheme allow to securely commit to a secret value, and reveal it afterwards, so third parties can check that the commitment agrees with the value revealed.",
  "Cryptography - CommitmentScheme - Phases": "A commitment scheme consists of two phases, Commit and Reveal, involving a deterministic polynomial-time algorithm",
  "Cryptography - CommitmentScheme - Phases - Commit": "Commit phase: in this stage, the sender commits to a binary value m by computing c = Comm(u, m) for a uniformly random binary u in and sending c to the receiver, who stores the result for later checking.",
  "Cryptography - CommitmentScheme - Phases - Reveal": "Reveal phase: in this stage, the sender opens c by sharing u and m with the receiver, who computes by himself c’ = Comm(u, m) and checks c’ = c.",
  "Cryptography - CommitmentScheme - Proposals": ".",
  "Cryptography - CommitmentScheme - Proposals - Pedersen": ".",
  "Cryptography - CommitmentScheme - Proposals - Elgamal": ".",
  "Cryptography - CommitmentScheme - Proposals - Switch": ".",
  "Cryptography - CommitmentScheme - Proposals - Vector": "Vector commitments allow committing concisely to an ordered sequence of values so that the values at desired positions can later be proved concisely.",

  "Cryptography - DigitalSignature": "SECTION",
	"Cryptography - DigitalSignature - desc": "Digital Signature is used to verify the authenticity and integrity of digital documents and messages.",
  "Cryptography - DigitalSignature - DSS": "A digital signature scheme (DSS) is a set of algorithms that take you through a three-stage process: KeyGen, Sign, Verify.",
  "Cryptography - DigitalSignature - Operations - SingleKey - Generation": "Generation of a public and private key pair. The private key allows a user to authorize transactions and proves ownership; the public key allows anyone to send digital assets to it. ",
  "Cryptography - DigitalSignature - Operations - SingleKey - Generation - Schemes - DSA": "Digital Signature Algorithm. DSA encryption uses a different algorithm than RSA to create public key/private keys, based on modular exponentiation and the discrete logarithm problem. It provides the same levels of security as RSA for equivalent-sized keys. DSA was proposed by the National Institute of Standards and Technology (NIST) in 1991 and was adopted by the Federal Information Processing Standard (FIPS) in 1993.",
  "Cryptography - DigitalSignature - Operations - SingleKey - Generation - Algorithms - ECSA": "ECSA stands for Elliptic Curve Signature Algorithm. It is a digital signature scheme based on elliptic curve cryptography (ECC). ECSA is widely used for creating and verifying digital signatures, providing a secure and efficient way to ensure data integrity, authenticity, and non-repudiation. ECSA is an adaptation of the Digital Signature Algorithm (DSA) but uses elliptic curve cryptography instead of traditional modular arithmetic. It leverages the mathematical properties of elliptic curves to provide strong security with smaller key sizes compared to RSA or classical DSA.",
  "Cryptography - DigitalSignature - Operations - SingleKey - Generation - Algorithms - ECDSA": "Elliptic Curve Digital Signature Algorithm (ECDSA) offers a variant of the Digital Signature Algorithm (DSA) which uses elliptic-curve cryptography.",
  "Cryptography - DigitalSignature - Operations - SingleKey - Signature": "This algorithm, when given a message and a private key, generates a signature. ",
  "Cryptography - DigitalSignature - Operations - SingleKey - Signature - Access": "",
  "Cryptography - DigitalSignature - Operations - SingleKey - Signature - Transactions": "",
	"Cryptography - DigitalSignature - Operations - SingleKey - Verification": "The verification algorithm checks the message, public and private keys, and will verify the signature. It will either accept or reject it depending on authenticity.  ",
  "Cryptography - DigitalSignature - Operations - SingleKey - Verification - Schemes": "A signature scheme refers to the combination of a data encryption scheme and a digital signature scheme in an authenticated encryption scheme.",
  "Cryptography - DigitalSignature - Operations - SingleKey - Verification - Schemes - Schnorr": "A Schnorr signature is a digital signature produced by the Schnorr signature algorithm that was described by Claus Schnorr. Schnorr’s signature scheme [59] is an elegant digital signature scheme whose security is rooted in the hardness of computing discrete logarithms in a given group. Schnorr signatures offer several advantages over ECDSA, including smaller signature sizes, faster verification times, and improved resistance against certain types of attacks. Schnorr signatures also allow for signature aggregation, which can reduce transaction fees and improve scalability.",
  "Cryptography - DigitalSignature - Operations - SingleKey - Verification - Schemes - Schnorr - Variants": "All variants of Schnorr’s protocol prove the knowledge of an x such that  h = g x for a public h.",
  "Cryptography - DigitalSignature - Operations - SingleKey - Verification - Schemes - Schnorr - Variants - Batch-Schnorr": "",
  "Cryptography - DigitalSignature - Operations - SingleKey - Verification - Schemes - BLS": "BLS stands for Boneh-Lynn-Shacham, which is a digital signature scheme based on pairing-based cryptography. BLS signatures are known for their short signature size, efficiency, and unique properties that make them suitable for advanced cryptographic Protocols, such as aggregation and threshold signatures.",
  "Cryptography - DigitalSignature - Operations - SplitKey - Computation - Schemes - MPP - TSS": "Threshold Signature Scheme. A (t, n) threshold signature scheme (TSS) is a cryptographic protocol that allows a group of n participants to collectively sign documents or transactions.",
  "Cryptography - DigitalSignature - Operations - SplitKey - Computation - Schemes - MPP - TSS - vulnerabilities": "https://medium.com/@intuofficial/learning-from-the-past-mpc-vulnerabilities-how-intu-remains-unscathed-7a871e2bd249",
  "Cryptography - DigitalSignature - Operations - SplitKey - Computation - Schemes - MPP - TSS - GG18": "GG18 and GG20 are threshold signature protocols created by Rosario Gennaro and Steven Goldfeder. They allow digital signatures using ECDSA to be produced by a group without leaking private keys. GG18 was the first threshold signature protocol that allowed a group to sign transactions without needing a trusted central party. It used a type of encryption called Paillier to keep the signature shares private. But GG18 was slow, requiring lots of back and forth communication.",
  "Cryptography - DigitalSignature - Operations - SplitKey - Computation - Schemes - MPP - TSS - GG20": "GG20 made things much faster by only needing one round of communication to sign. It also added new capabilities like being able to identify if someone abruptly quit the protocol. GG20 became popular and was adopted along with GG18.",
  "Cryptography - DigitalSignature - Operations - SplitKey - Computation - Schemes - MPP - TSS - Lindell17": "Lindell17 is another protocol by Yehuda Lindell for signing transactions. It splits the private key between two participants who work together to create the signature.",
  "Cryptography - DigitalSignature - Operations - SplitKey - Computation - Schemes - MPP - TSS - DGC": "",
  "Cryptography - DigitalSignature - Operations - SplitKey - Computation - Schemes - MPP - TSS - EDDSA": "",
  "Cryptography - DigitalSignature - Operations - SplitKey - Computation - Schemes - MPP - TSS - DKLS19": "",
  "Cryptography - DigitalSignature - Operations - SplitKey - Computation - Schemes - MPP - TSS - MPC-CMP": "",
  "Cryptography - DigitalSignature - Operations - MultiSig": "Requires multiple private keys to approve transactions, reducing reliance on a single key.",
  "Cryptography - DigitalSignature - Applications - Identification - Blockchain - Keys - Private - SeedPhrase": "",

  "Cryptography - DigitalCertificate": "SECTION",
	"Cryptography - DigitalCertificate - desc": "Digital certificates or digital identification cards, are just like physical ID proofs. These certificates are files that use cryptography and PKI to authenticate the servers, devices, websites, etc.",
  "Cryptography - DigitalCertificate - Goals": "Apart from assuring the originality of the messages and identity verification, some other benefits of a digital signature include: Authentication, Integrity, Accountability",
  "Cryptography - DigitalCertificate - Goals - Authentication": "Though the sender’s identity in sending a message is known, the message may seem inaccurate or suspicious. Digital signatures are proofs of authenticity when they are attached to documents, and they are pivotal, especially in the case of financial transactions.",
  "Cryptography - DigitalCertificate - Goals - Integrity": "Digital messages can be compromised or altered by intruders in the absence of these signatures. Digital signatures safeguard the same, and in case of alteration of messages, the digital signature will become invalid. This cautions the recipient that the message is compromised. In this way, data integrity is assured for both parties.",
  "Cryptography - DigitalCertificate - Goals - Accountability": "Non-repudiation by the sender is not possible in the case of digital signatures, and this makes them accountable when a message is signed and sent by them.",
	"Cryptography - DigitalCertificate - Formats": "",
	"Cryptography - DigitalCertificate - Formats - X.509": "x509 is the name for certificates which are defined for: informal internet electronic mail, IPsec, and WWW applications X.509 certificates are often encoded in DER format.",
  "Cryptography - DigitalCertificate - Formats - ASN.1": "ASN.1 is a standard interface description language (IDL) for defining data structures that can be serialized and deserialized in a cross-platform way. ASN.1 defines the abstract syntax of information but does not restrict the way the information is encoded. Various ASN.1 encoding rules provide the transfer syntax (a concrete representation) of the data values whose abstract syntax is described in ASN.1.",
  "Cryptography - DigitalCertificate - File - EncondingFormats": ".",
  "Cryptography - DigitalCertificate - File - EncondingFormats - BER": ".",
  "Cryptography - DigitalCertificate - File - EncondingFormats - CER": ".",
  "Cryptography - DigitalCertificate - File - EncondingFormats - DER": "DER (Distinguished Encoding Rules) DER is a binary encoding format used to represent data structures in a standardized way. It is a subset of ASN.1 (Abstract Syntax Notation One), a language for defining data structures. DER ensures that the encoded data is unambiguous and can be parsed consistently across different systems.",
  "Cryptography - DigitalCertificate - File - EncondingFormats - DER - Purpose": "Encodes data structures in a binary format.",
  "Cryptography - DigitalCertificate - File - EncondingFormats - DER - Uses": ".",
  "Cryptography - DigitalCertificate - File - EncondingFormats - DER - Uses - DigitalCertificates": "",
  "Cryptography - DigitalCertificate - File - EncondingFormats - DER - Uses - CryptographicKeys": "RSA, ECC, and other keys are encoded in DER.",
  "Cryptography - DigitalCertificate - File - EncondingFormats - DER - Uses - PKCSStandards": "DER is used in PKCS#7 (CMS), PKCS#10 (Certificate Signing Requests), and other PKCS standards.",
  "Cryptography - DigitalCertificate - File - EncondingFormats - DER - Uses - ASN.1 Data Structures": "Any ASN.1-defined data structure can be encoded in DER.",
  "Cryptography - DigitalCertificate - File - EncondingFormats - CRT": ".",
  "Cryptography - DigitalCertificate - File - EncondingFormats - PEM": ".",
  "Cryptography - DigitalCertificate - File - EncondingFormats - P7B": "P7B/PKCS#7. Certificates in P7B/PKCS#7 formats are encoded in Base64 ASCII encoding and they usually have .p7b or .p7c as the file extension. The thing that separates PKCS#7 formatted certificates is that only certificates can be stored in this format, not private keys. In other words, a P7B file will only consist of certificates and chain certificates. The certificates having P7B/PKCS#7 format are contained between the “—–BEGIN PKCS7—–” and “—–END PKCS7—–” statements. Microsoft Windows and Java Tomcat are the most common platforms using this format for SSL certificates.",
  "Cryptography - DigitalCertificate - File - EncondingFormats - P7S": ".",
  "Cryptography - DigitalCertificate - File - EncondingFormats - PFX": "The PFX/P12/PKCS#12 format — all of which refer to a personal information exchange format — is the binary format that stores the server certificate, the intermediate certificate and the private key in a single password-protected pfx or .p12 file. These files are typically used on Windows platforms i to allow you to import and export certificates and private keys..",
  "Cryptography - DigitalCertificate - File - EncondingFormats - P12": ".",
	"Cryptography - DigitalCertificate - Management - PKI": "PKI is a comprehensive framework that enables the use of public-key cryptography for secure communication, authentication, and data integrity.",
  "Cryptography - DigitalCertificate - Management - PKI - OIDs": "An OID is a globally unique identifier used to name objects, concepts, or entities in various systems, including cryptography, telecommunications, and IT. OIDs are structured as a hierarchical sequence of numbers, where each number represents a node in the hierarchy.",
  "Cryptography - DigitalCertificate - Management - PKI - OIDs - Purpose": "Identifies objects, algorithms, or concepts.",	
	"Cryptography - DigitalCertificate - Management - PKI - Components": "",
	"Cryptography - DigitalCertificate - Management - PKI - Components - CA": "Certificate Authority (CA): A trusted entity that issues and verifies digital certificates.",
	"Cryptography - DigitalCertificate - Management - PKI - Components - DigitalCertificates": "Digital Certificates: Bind a public key to an entity (e.g., a person, organization, or device).",
	"Cryptography - DigitalCertificate - Management - PKI - Components - RA": "Registration Authority (RA): Verifies the identity of entities requesting certificates.",
	"Cryptography - DigitalCertificate - Management - PKI - Components - CRL": "Certificate Revocation List (CRL): A list of revoked certificates that are no longer valid.",
	"Cryptography - DigitalCertificate - Management - PKI - Components - Public/PrivateKeyPairs:": "Public/Private Key Pairs: Used for encryption, decryption, and digital signatures.",
	"Cryptography - DigitalCertificate - Management - PKI - Functions - Authentication": "Verifies the identity of entities.",
	"Cryptography - DigitalCertificate - Management - PKI - Functions - Encryption": "Secures data using public-key cryptography.",
	"Cryptography - DigitalCertificate - Management - PKI - Functions - Signatures": "Ensures data integrity and non-repudiation.",
	"Cryptography - DigitalCertificate - Management - PKI - Functions - KeyManagement": "Manages the lifecycle of cryptographic keys and certificates.",
  "Cryptography - DigitalCertificate - Management - PKI - Certificates": "",
  "Cryptography - DigitalCertificate - Management - PKI - Certificates - X509Certificate": "",
	"Cryptography - DigitalCertificate - Web - SSL": "Protocols used for secure communication over the internet.",
	"Cryptography - DigitalCertificate - Web - TLS": "Protocols used for secure communication over the internet.",
	"Cryptography - DigitalCertificate - Email - PGP": "A program used for encrypting emails.",

	"Quantum": "SECTION",
  "Quantum - Falcom": "",
  "Quantum - Dilithium": "",
  "Quantum - VPU": ""

}

