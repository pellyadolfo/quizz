{

	"Cloud": "SECTION",
	"Cloud - AWS EKS": "Amazon Elastic Kubernetes Service (Amazon EKS) is a fully managed Kubernetes service that enables you to run Kubernetes seamlessly in both AWS Cloud and on-premises data centers.",
	"Cloud - AWS ECS": "Amazon Elastic Container Service (Amazon ECS) is a fully managed container orchestration service that helps you to more efficiently deploy, manage, and scale containerized applications.",

	"Compute": "SECTION",
	"Compute - AWS Lambda": "",
	"Compute - AWS Lambda - Languages": "",
	"Compute - AWS Lambda - Languages - NodeJS": "",
	"Compute - AWS Lambda - Languages - Python": "",
	"Compute - AWS Lambda - Languages - Java": "",
	"Compute - AWS Lambda - Languages - Go": "",
	"Compute - AWS Lambda - Languages - C#": "",
	"Compute - AWS Lambda - Languages - PowerShell": "",
	"Compute - AWS Lambda - Languages - Ruby": "",
	"Compute - AWS Lambda - Invokation": "",
	"Compute - AWS Lambda - Invokation - by AWS services": "",
	"Compute - AWS Lambda - Invokation - by AWS services - S3": "S3Event",
	"Compute - AWS Lambda - Invokation - by AWS services - Kinesis": "KinesisEvent",
	"Compute - AWS Lambda - Invokation - by AWS services - SQS": "",
	"Compute - AWS Lambda - Invokation - by AWS services - SNS": "SNSEvent",
	"Compute - AWS Lambda - Invokation - by AWS services - Cognito": "CognitoEvent",
	"Compute - AWS Lambda - Invokation - by AWS services - DynamoDB": "DynamodbEvent",
	"Compute - AWS Lambda - Invokation - by AWS services - CloudTrail": "",
	"Compute - AWS Lambda - Invokation - by API Gateway (HTTPS)": "APIGatewayProxyRequestEvent  - You can invoke AWS Lambda functions over HTTPS",
	"Compute - AWS Lambda - Invokation - by API Gateway - multiple": "You can do this by defining a custom REST API and endpoint using Amazon API Gateway, and then mapping individual methods, such as GET and PUT, to specific Lambda functions.",
	"Compute - AWS Lambda - Invokation - by API Gateway - unique": "You could add a special method named ANY to map all supported methods (GET, POST, PATCH, DELETE) to your Lambda function. When you send an HTTPS request to the API endpoint, the Amazon API Gateway service invokes the corresponding Lambda function.",
	"Compute - AWS Lambda - Invokation - by Custom Events": "",
	"Compute - AWS Lambda - Invokation - by Scheduled events": "",
	"Compute - AWS ElasticBeanStalk": ".",
	"Compute - AWS Fargate": "AWS Fargate is a serverless, pay-as-you-go compute engine that lets you focus on building applications without managing servers.",
	"Compute - AWS ECS ": "https://ajmmertens.medium.com/building-an-ecs-storage-in-pictures-642b8bfd6e04",
	"Compute - AWS EC2 - Instances - R": "R = Memory Optimised. The “R” refers to optimised memory usage of each resource type. R instances are geared for workloads that require more memory in relation to the CPU.",
	"Compute - AWS EC2 - Instances - C": "C = Compute Optimised, and so on.",
	"Compute - AWS EC2 - Instances - M": "M Instances: general-purpose instances and provide a balanced amount of CPU, memory, and network resources.. Examples of M Instance Types: M5, M6g",

	"Middleware": "",
	"Middleware - AWS SQS": "Amazon SQS is a highly reliable, scalable message queuing service that enables asynchronous message-based communication between distributed components of an application.",
	"Middleware - AWS SQS - Reliability": "No message is ever lost in the interim, each message is persistently stored in highly available, highly reliable queues.",
	"Middleware - AWS SQS - Complexity": "SQS is dead-simple to use. Simply create a queue, and send messages to it.",
	"Middleware - AWS  SQS - Queue Types": "Amazon SQS offers two queue types for different application requirements: Standard Queues and FIFO Queues",
	"Middleware - AWS SQS - Queue Types - Standard Queues": "",
	"Middleware - AWS SQS - Queue Types - Standard Queues - Throughput": "Unlimited Throughput: Standard queues support a nearly unlimited number of transactions per second (TPS) per API action.",
	"Middleware - AWS SQS - Queue Types - Standard Queues - Delivery": "At-Least-Once Delivery: A message is delivered at least once, but occasionally more than one copy of a message is delivered.",
	"Middleware - AWS SQS - Queue Types - Standard Queues - Ordering": "Best-Effort Ordering: Occasionally, messages might be delivered in an order different from which they were sent.",
	"Middleware - AWS SQS - Queue Types - Standard Queues - Use Cases": "",
	"Middleware - AWS SQS - Queue Types - FIFO Queues": "",
	"Middleware - AWS SQS - Queue Types - FIFO Queues - Throughput": "High Throughput: By default, FIFO queues support up to 300 messages per second (300 send, receive, or delete operations per second). When you batch 10 messages per operation (maximum), FIFO queues can support up to 3,000 messages per second. To request a limit increase, file a support request.",
	"Middleware - AWS SQS - Queue Types - FIFO Queues - Delivery": "Exactly-Once Processing: A message is delivered once and remains available until a consumer processes and deletes it. Duplicates aren't introduced into the queue.",
	"Middleware - AWS SQS - Queue Types - FIFO Queues - Ordering": "First-In-First-Out Delivery: The order in which messages are sent and received is strictly preserved (i.e. First-In-First-Out).",
	"Middleware - AWS SQS - Queue Types - FIFO Queues - Use Cases": "",
	"Middleware - AWS SNS": "",

	"Storage": "SECTION",
	"Storage - AWS Neptune": "",
	"Storage - AWS ElasticCache": "",
	"Storage - AWS RDS": "",
	"Storage - AWS DynamoDB": "",
	"Storage - AWS DocumentDB": "",
	"Storage - AWS Aurora": "",
	"Storage - AWS S3": "",
	"Storage - AWS EFS": "",
	"Storage - AWS EBS": "",

	"Network": "SECTION",
	"Network - AWS Regions": "",
	"Network - AWS Regions - AZ - descc": "Availability Zones (AZs) are isolated locations within an AWS Region.",
	"Network - AWS Regions - AZ - multiple": "Each of the AWS regions has multiple Availability Zones implemented under them, and each availability zone is built to be isolated from any other.",
	"Network - AWS Regions - AZ - location": "However, the naming doesn’t correspond with the real location of the physical data centre.",
	"Network - AWS Regions - AZ - AZ ID": "Availability Zone names are unique and you can only use the ID for that account in those Availability Zones. It is across from all AWS accounts, with the same ID.",
	"Network - AWS Regions - infra": "",
	"Network - AWS Regions - infra - InternetGateway": "",
	"Network - AWS Regions - infra - RouteTable": "",
	"Network - AWS Regions - ": "",
	"Network - AWS CloudFormation": "",
	"Network - AWS CDK": "",

	"CICD": "SECTION",
	"CICD - Security ": "",
	"CICD - Security - AWS IAMS - SecurityGroups": "",
	"CICD - Security - AWS Cognito": "",
	"CICD - Development - AWS CodePipeline": "",
	"CICD - Audit - AWS CloudWatch": "",
	"CICD - AWS KMS": ""
	
}