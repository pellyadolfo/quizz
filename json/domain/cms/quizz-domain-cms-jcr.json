{

	"JCR": "SECTION",

	"JCR - RepositoryModel": "SECTION",
	"JCR - RepositoryModel - Workspaces": "A JCR repository is composed of one or more persistent workspaces.",
	"JCR - RepositoryModel - Workspace": "Each consisting of a directed acyclic graph of items where the edges represent the\nparent-child relation",
	"JCR - RepositoryModel - Workspace - name": "Each persistent workspace is identified by a unique name within the repository,\nwhich is a string.",
	"JCR - RepositoryModel - Workspace - items": "An item is either a node or a property. The nodes of a workspace form the structure of the stored data while the actual\ncontent is stored in the values of the properties.",
	"JCR - RepositoryModel - Workspace - items - node": "A node can have zero or more child items.",
	"JCR - RepositoryModel - Workspace - items - node - parent": "The root node is the only item in the workspace without a parent node; all other items have at least\none parent.",
	"JCR - RepositoryModel - Workspace - items - node - shared": "In the simplest case, a workspace is a tree of items. However, strictly speaking,\nthe more general term graph should be used to cover those cases where a\nrepository supports the optional shareable nodes feature, which allows an item to\nhave more than one parent (see §3.9 Shareable Nodes Model).",
	"JCR - RepositoryModel - Workspace - items - node - root": "Each workspace contains at least one item, the root node.",
	"JCR - RepositoryModel - Workspace - items - node - Names": "The name of the root node of a workspace is always ““ (the empty string). Every\nother item in a workspace has a name, which must be a JCR name (see §3.2\nNames).",
	"JCR - RepositoryModel - Workspace - items - node - Names - SameNameSiblings": "In the simplest case, every child item of a given parent has a unique name.\nHowever, child nodes with identical names can only occur if a repository supports\nsame-name siblings (see §22 Same-Name Siblings).",
	"JCR - RepositoryModel - Workspace - items - node - Names - SameNameProperty": "Additionally, some\nrepositories may support a node and sibling property having the same name (see\n14\n§5.1.8 Node and Property with Same Name). However, two sibling properties can\nnever have the same name.",
	"JCR - RepositoryModel - Workspace - items - node - Names - index": "To distinguish sibling nodes with the same name an integer index, starting at 1,\nis used. A node with no same-name siblings has an implicit index of 1 and a node\nname without an index is understood to have an index of 1.",
	"JCR - RepositoryModel - Workspace - items - node - Paths": "The location of an item in the workspace graph can be described by the path from\nthe root node to that item. The path consists of the name (and index in cases of\nsame-name siblings) of each interceding node in order from root to target item,\nmuch like a file system path. Relative paths can also be used to describe the\nlocation of one item with respect to another.",
	"JCR - RepositoryModel - Workspace - items - node - Identifiers": "In addition to a path, every node also has an identifier. In some implementations,\nthe identifier may be independent of the path and provide an identity to the node\nthat is stable across moves within the workspace. In simpler repositories the\nidentifier may be implemented as a reflection of the path and therefore not\nprovide any additional semantics (see §3.3 Identifiers).",
	"JCR - RepositoryModel - Workspace - items - node - PropertyTypes": "Properties can be either single or multi-valued. Each value has one of the 12\npossible types (see §3.6 Properties). These types include familiar data storage\ntypes such as strings, numbers, booleans, binaries and dates, as well as types\nthat hold pointers to other nodes in the workspace.",
	"JCR - RepositoryModel - Workspace - items - node - NodeTypes": "Every node has a type. A node’s type The names, types and other attributes of its\nchild items. Node types can be used to define complex storage objects consisting\nof multiple subnodes and properties, possibly many layers deep.",
	"JCR - RepositoryModel - Workspace - items - node - Sessions": "A user connects to a repository by passing a set of credentials and the name of\nthe workspace that the user wishes to access. The repository returns a session\nwhich binds the user to the requested persistent workspace with a level of\nauthorization determined by that user's credentials. A session is always bound to\nexactly one persistent workspace, though a single persistent workspace may be\nbound to multiple sessions.",
	"JCR - RepositoryModel - Workspace - items - node - Sessions - User": "A user is any agent bound to a session. This may be a human user, an external\nsoftware process, or anything else that holds and controls the session.",
	"JCR - RepositoryModel - Workspace - items - node - Sessions - Current": "Through a session, the user can access, read and write the nodes and properties\nof the bound workspace, to the extent allowed by that user's authorization and\nthe capabilities of the repository. Any object acquired, directly, or indirectly\nthrough a chain of interceding objects, from a particular session, is said to be\nwithin the scope of that session and any method called on such object is also\nwithin the scope of the same session.\nIn the context of discussing a particular object or method call, the session within\nwhose scope that object or method call lies is referred to as the current session,\nand the workspace to which that session is bound is referred to as the current\nworkspace.",
	"JCR - RepositoryModel - Workspace - items - property": "A property cannot have child items but can hold zero or more values.",
	"JCR - RepositoryModel - Workspace - Lifecycle": "",

	"JCR - Connecting": "SECTION",
	"JCR - Connecting - RepositoryObjects": "",
	"JCR - Connecting - Login": "",
	"JCR - Connecting - Impersonate": "",
	"JCR - Connecting - Session": "",
	"JCR - Connecting - Transactions": "SECTION",

	"JCR - Read": "SECTION",
	"JCR - Read - Read - Access": "",
	"JCR - Read - Read - Access - DirectAccess": "",
	"JCR - Read - Read - Access - TraversalAccess": "",
	"JCR - Read - Read - Access - QueryAccess": "",
	"JCR - Read - Read - NodeInfo": "",
	"JCR - Read - Read - NodeInfo - NodeId": "",
	"JCR - Read - Read - NodeInfo - NodeIndex": "",
	"JCR - Read - Read - Iterators": "",
	"JCR - Read - Read - ReadingProperties": "",
	"JCR - Read - Read - NamespaceMapping": "",
	"JCR - Read - Query": "",
	"JCR - Read - Query - OptionalJoins": "",
	"JCR - Read - Query - AbstractQueryModel": "",
	"JCR - Read - Query - QueryScope": "",
	"JCR - Read - Query - QueryValidity": "",
	"JCR - Read - Query - QueryManager": "",
	"JCR - Read - Query - QueryObject": "",
	"JCR - Read - Query - QueryResult": "",
	"JCR - Read - Export": "",
	"JCR - Read - Export - ExportSubgraph": "",
	"JCR - Read - Export - SystemView": "",
	"JCR - Read - Export - DocumentView": "",

	"JCR - Read - Export - Escaping": "",
	"JCR - Read - Export - ExportAPI": "",
	"JCR - Read - Export - ExportScope": "",
	"JCR - Read - Export - Encoding": "",
	"JCR - Read - Observe": "",
	"JCR - Read - Observe - EventModel": "",
	"JCR - Read - Observe - Event": "",
	"JCR - Read - Observe - AsynchronousObservation": "",
	"JCR - Read - Observe - JournaledObservation ": "",
	"JCR - Read - Observe - ImportingContent": "",
	"JCR - Read - Observe - Exceptions": "",

	"JCR - Write": "SECTION",
	"JCR - Write - Write": "",
	"JCR - Write - Write - Methods": "",
	"JCR - Write - Write - Session": "",
	"JCR - Write - Write - Workspace": "",
	"JCR - Write - Write - Nodes": "",
	"JCR - Write - Write - Save": "",
	"JCR - Write - Import": "",
	"JCR - Write - Import - DocumentView": "",
	"JCR - Write - Import - SystemView": "",
	"JCR - Write - Import - Determining - NodeTypes": "",
	"JCR - Write - Import - Determining - PropertyTypes": "",
	"JCR - Write - Import - ImportMethods": "",
	"JCR - Write - Import - ImportMethods - EventBased": "",
	"JCR - Write - Import - ImportMethods - StreamBased": "",
	"JCR - Write - Import - IdentifierHandling": "",
	"JCR - Write - Import - jcr:root": "",
	"JCR - Write - Versioning": "",
	"JCR - Write - Locking": "",
	"JCR - Write - Retention": ""

}
