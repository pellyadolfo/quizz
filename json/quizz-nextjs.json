{
  "NextJS": "SECTION",

	"App": "SECTION",
  "App - app": "Next.js uses the App component to initialize pages. You can override it and control the page initialization and: Create a shared layout between page changes, Inject additional data into pages, Add global CSS",
  "App - app - create-next-app": "The easiest way to get started with Next.js is by using create-next-app. This CLI tool enables you to quickly start building a new Next.js application, with everything set up for you.",
  "App - app - _app": "To override the default App, create the file pages/_app",
  "App - page": "In Next.js, a page is a React Component exported from a .js, .jsx, .ts, or .tsx file in the pages directory. Each page is associated with a route based on its file name.",
  "App - page - Page": "",
  "App - page - Page - getInitialProps": "",
  "App - page - Page - getServerSideProps": "",
  "App - page - Page - getStaticPaths": "",
  "App - page - Page - getStaticProps": "",
  "App - page - access": "If you create pages/about.js that exports a React component like below, it will be accessible at /about.",
	"App - page - Styling": ".",
	"App - routing": ".",
	"App - routing - Hooks - useRouter": ".",

	"UI - Components": "",
  "UI - Components - Link": "<Link/> in import Link from 'next/link'",
  "UI - Components - Font": "",
  "UI - Components - Head": "",
  "UI - Components - Image": "",
  "UI - Components - Script": "",
  "UI - Execution - NextRequest": ".",
  "UI - Execution - NextResponse": ".",
  "UI - Execution - Rendering - pattern - CSR": "In Client-Side Rendering (CSR) with React, the browser downloads a minimal HTML page and the JavaScript needed for the page. The JavaScript is then used to update the DOM and render the page. When the application is first loaded, the user may notice a slight delay before they can see the full page, this is because the page isn't fully rendered until all the JavaScript is downloaded, parsed, and executed.",
  "UI - Execution - Rendering - pattern - SSR": "Try to use SSR consciously and check whether you actually need SEO or not for your application. SSR takes up an immense load, so if you avoid using it when not required, you will be blessed. NextJS is the best among the available SSR. If a page uses Server-side Rendering, the page HTML is generated on each request.",
	"UI - Execution - Rendering - pattern - SSR - getServerSideProps": "To use Server-side Rendering for a page, you need to export an async function called getServerSideProps. This function will be called by the server on every request.",
  "UI - Execution - Rendering - pattern - SSG": "If a page uses Static Generation, the page HTML is generated at build time. That means in production, the page HTML is generated when you run next build. This HTML will then be reused on each request. It can be cached by a CDN.",
  "UI - Execution - Rendering - pattern - SSR - no data": ".",
  "UI - Execution - Rendering - pattern - SSR - data": ".",
  "UI - Execution - Rendering - ASO": "Next.js automatically determines that a page is static (can be prerendered) if it has no blocking data requirements. This determination is made by the absence of getServerSideProps and getInitialProps in the page.",
	"UI - Execution - Caching": ".",
	"UI - Execution - Caching - mechanisms": ".",
	"UI - Execution - Caching - mechanisms - Request Memoization": ".",
	"UI - Execution - Caching - mechanisms - Data Cache": ".",
	"UI - Execution - Caching - mechanisms - Full Route Cache": ".",
	"UI - Execution - Caching - mechanisms - Router Cache": ".",

	"DataFeching": ".",
	"DataFeching - Types": "There are four ways you can fetch data: (1) On the server, with fetch, (2) On the server, with third-party libraries (3) On the client, via a Route Handler (4) On the client, with third-party libraries.",
	"DataFeching - Types - server fetch": ".",
	"DataFeching - Types - server libraries": ".",
	"DataFeching - Types - client RouteHandler": ".",
	"DataFeching - Types - client libraries": ".",

	"Server": "By default, Next.js includes its own server with next start.",


	"CICD": "."

}